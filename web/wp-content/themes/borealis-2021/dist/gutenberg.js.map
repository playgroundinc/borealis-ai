{"version":3,"file":"gutenberg.js","mappings":"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","sources":["webpack://pg-wp-starter/./src/js/blocks/helper-functions/constants.js","webpack://pg-wp-starter/./src/js/blocks/helper-functions/custom-error.js","webpack://pg-wp-starter/./src/js/blocks/helper-functions/default-attrs.js","webpack://pg-wp-starter/./src/js/blocks/accordion/accordion-row.jsx","webpack://pg-wp-starter/./src/js/blocks/accordion/accordion.jsx","webpack://pg-wp-starter/./src/js/blocks/blockquote/blockquote.jsx","webpack://pg-wp-starter/./src/js/blocks/body-copy.jsx","webpack://pg-wp-starter/./src/js/blocks/callouts/callout-column.jsx","webpack://pg-wp-starter/./src/js/blocks/callouts/callout-container.jsx","webpack://pg-wp-starter/./src/js/blocks/content-cards/content-card-container.jsx","webpack://pg-wp-starter/./src/js/blocks/content-cards/content-card.jsx","webpack://pg-wp-starter/./src/js/blocks/copy/copy-blocks.jsx","webpack://pg-wp-starter/./src/js/blocks/core-extends/video-embed-poster.jsx","webpack://pg-wp-starter/./src/js/blocks/greenhouse/jobs-block.jsx","webpack://pg-wp-starter/./src/js/blocks/icon-list/icon-list-container-block.jsx","webpack://pg-wp-starter/./src/js/blocks/icon-list/icon-list-item-block.jsx","webpack://pg-wp-starter/./src/js/blocks/image-block.jsx","webpack://pg-wp-starter/./src/js/blocks/image-list/image-list-block.jsx","webpack://pg-wp-starter/./src/js/blocks/image-list/image-list-container.jsx","webpack://pg-wp-starter/./src/js/blocks/image-text.jsx","webpack://pg-wp-starter/./src/js/blocks/logos/logo-container.jsx","webpack://pg-wp-starter/./src/js/blocks/logos/logo.jsx","webpack://pg-wp-starter/./src/js/blocks/meta/author-meta.jsx","webpack://pg-wp-starter/./src/js/blocks/meta/news-meta.jsx","webpack://pg-wp-starter/./src/js/blocks/meta/page-meta.jsx","webpack://pg-wp-starter/./src/js/blocks/meta/publications-meta.jsx","webpack://pg-wp-starter/./src/js/blocks/meta/research-blogs-meta.jsx","webpack://pg-wp-starter/./src/js/blocks/meta/team-member-meta.jsx","webpack://pg-wp-starter/./src/js/blocks/page-strips/page-strip-graphic-container.jsx","webpack://pg-wp-starter/./src/js/blocks/page-strips/page-strip-graphic.jsx","webpack://pg-wp-starter/./src/js/blocks/page-strips/page-strip.jsx","webpack://pg-wp-starter/./src/js/blocks/posts/featured-posts-container.jsx","webpack://pg-wp-starter/./src/js/blocks/publications/bibtex-block.jsx","webpack://pg-wp-starter/./src/js/blocks/publications/publications-container.jsx","webpack://pg-wp-starter/./src/js/blocks/publications/select-posts-blocks.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/block-custom-settings.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/custom-image-upload.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/custom-post-column.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/custom-richtext-block.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/custom-richtext-component.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/custom-video-upload.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/select-authors.jsx","webpack://pg-wp-starter/./src/js/blocks/reusable/select-post.jsx","webpack://pg-wp-starter/./src/js/blocks/sidebar-table-of-contents/custom-section-blok.jsx","webpack://pg-wp-starter/./src/js/blocks/sidebar-table-of-contents/custom-subsection-blok.jsx","webpack://pg-wp-starter/./src/js/blocks/slider/news-slide.jsx","webpack://pg-wp-starter/./src/js/blocks/slider/slider-container.jsx","webpack://pg-wp-starter/./src/js/blocks/stats/stats-column.jsx","webpack://pg-wp-starter/./src/js/blocks/stats/stats-container.jsx","webpack://pg-wp-starter/./src/js/blocks/tabbed-content/tabbed-content-container.jsx","webpack://pg-wp-starter/./src/js/blocks/tabbed-content/tabbed-content-panel.jsx","webpack://pg-wp-starter/./src/js/blocks/tag-cloud/tag-cloud-container-block.jsx","webpack://pg-wp-starter/./src/js/blocks/tag-cloud/tag-cloud-item-block.jsx","webpack://pg-wp-starter/./src/js/blocks/text-column.jsx","webpack://pg-wp-starter/webpack/bootstrap","webpack://pg-wp-starter/webpack/runtime/define property getters","webpack://pg-wp-starter/webpack/runtime/hasOwnProperty shorthand","webpack://pg-wp-starter/webpack/runtime/make namespace object","webpack://pg-wp-starter/./src/js/gutenberg.js"],"sourcesContent":["export const namespace = 'pg';","export default function CustomErrors(fields, values) {\n  const compileErrors = (fields, values) => {\n    if (Object.keys(fields).length > 0 && fields.constructor === Object && values.length > 0) {\n      const errorFields = values.filter((value) => {\n        return fields[`${value}`] === undefined;\n      });\n      return errorFields;\n    } \n    throw new Error(`${fields.type} control missing all required fields`);\n  }\n\n  const verifyInputs = (fields, values) => {\n    const errorFields = compileErrors(fields, values);\n    if (errorFields.length > 0) {\n      throw new Error( `${fields.type} control is missing properties ${errorFields.join(', ')} `)\n    } \n  }\n\n  verifyInputs(fields, values);\n}\n","export default function DefaultAttrs(fields, source = null) {\n    const attributes = {};\n    if (Array.isArray(fields) && fields.length > 0) {\n        fields.forEach((field) => {\n            attributes[`${field}`] = {\n                type: 'string',\n                default: '',\n            }\n            if (source) {\n                attributes[`${field}`]['source'] = source;\n                attributes[`${field}`]['meta'] = field;\n            }\n        });\n        return attributes;\n    }\n}\n","import {namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function accordionBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"accordion-row\";\n\tconst blockTitle = \"Accordion Row\";\n\tconst blockDescription = \"Creates a single expandable accordion item.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"table-row-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = ['title'];\n    const attributes = defaultAttrs(stringAttrs);\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n        parent: [`${namespace}/accordion`],\n\t\tedit: (props, editor = false, save = false ) => {\n            const { setAttributes, attributes } = props;\n            const { title } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n                setAttributes({ [attribute]: value });\n            }\n\n            return [\n                <div className={`custom-child ${ editor ? \"accordion-editory\" : \"accordion--fe\" }` }>\n                    <p className=\"block-title\">Accordion Row</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'p',\n                                settings: [],\n                                classes: ['heading-four'],\n                                placeholder: 'Accordion row title here',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    {save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={['core/paragraph', `${namespace}/document-row`, `${namespace}/heading-four`]}\n                        />\n                    )}\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function accordionBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"accordion\";\n\tconst blockTitle = \"Accordion\";\n\tconst blockDescription = \"Creates a set of expandable items.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"feedback\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'anchor_id',\n        'description',\n        'title',\n        'bg_color'\n    ];\n    const attributes = defaultAttrs(stringAttrs);\n    attributes['bg_color']['default'] = 'white';\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { anchor_id, bg_color, description, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container block--${bg_color} }` }>\n                    <p className=\"block-title\">Accordion</p>\n                    <BlockSettings \n                        controls={[\n                            {\n                                type: 'select',\n                                label: 'Background color',\n                                reference: 'bg_color',\n                                value: bg_color,\n                                options: [\n                                    { value: 'white', label: 'White' },\n                                    { value: 'grey', label: 'Grey' }\n                                ]\n                            },   \n                            {\n                                type: 'text',\n                                label: 'Anchor',\n                                reference: 'anchor_id',\n                                value: anchor_id,\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading_two'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    {save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/accordion-row`]}\n                        />\n                    )}\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import {namespace } from '../helper-functions/constants';\n\nimport CustomImageUpload from \"../reusable/custom-image-upload.jsx\";\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function blockquoteBlock() {\n\tconst { registerBlockType } = wp.blocks;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"blockquote\";\n\tconst blockTitle = \"Quote\";\n\tconst blockDescription = \"Creates a Blockquote.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"format-quote\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes: {\n            style: {\n                type: 'String',\n                default: 'default'\n            },\n            image_alt: {\n                type: 'String',\n                default: '',\n            },\n            image_url: {\n                type: 'String',\n                default: '',\n            },\n            image_id: {\n                type: 'Number',\n                default: 0,\n            },\n            name: {\n                type: 'String',\n                default: '',\n            },\n            role: {\n                type: 'String',\n                default: ''\n            },\n            quote: {\n                type: 'String',\n                default: ''\n            },\n            speaker: {\n                type: 'String',\n                default: '',\n            }\n        },\n\t\tedit: (props, editor = false, save = false ) => {\n            const { setAttributes, attributes } = props;\n            const { image_id, image_url, image_alt, speaker, role, quote, style } = attributes;\n\n            const styles = [\n                { label: 'Default', value: 'default' },\n                { label: 'Circle', value: 'circle' },\n                { label: 'Circle Centered', value: 'circle-centered' },\n                { label: 'Dark', value: 'dark' },\n            ]\n            function updateAttributeValue(attribute, value) {\n                setAttributes({ [attribute]: value });\n            }\n\n            return [\n                <div className={`custom-component`}>\n                    <p className=\"block-title\">{blockTitle}</p>\n                    <BlockSettings \n                        title=\"Block Settings\"\n                        controls={[\n                            { \n                                type: 'select',\n                                label: 'Quote Style',\n                                options: styles,\n                                reference: 'style',\n                                value: style,\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomImageUpload\n                        components={[\n                            {\n                                value: image_url,\n                                reference: 'image_url',\n                                altValue: image_alt,\n                                altReference: 'image_alt',\n                                idValue: image_id,\n                                idReference: 'image_id',\n                                buttonText: 'Add an image',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'quote',\n                                value: quote,\n                                tagName: 'p',\n                                settings: [],\n                                classes: [''],\n                                placeholder: 'Provide quote (required)',\n                            },\n                            {\n                                reference: 'speaker',\n                                value: speaker,\n                                tagName: 'p',\n                                settings: [],\n                                classes: [],\n                                placeholder: 'Speaker',\n                            },\n                            {\n                                reference: 'role',\n                                value: role,\n                                tagName: 'p',\n                                settings: [],\n                                classes: [],\n                                placeholder: 'Role',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n\t\t\treturn null;\n\t\t},\n\t});\n}","// Helpers\nimport { namespace } from './helper-functions/constants';\n\nexport default function bodyCopyBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"body-copy\";\n\tconst blockTitle = \"Body Copy\";\n\tconst blockDescription = \"Component to add copy to a page.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"editor-bold\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes: {\n        },\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-container\">\n                    <p class=\"block-title\">Body Copy</p>\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/heading-two`, `${namespace}/heading-three`, `${namespace}/heading-four`, `${namespace}/heading-five`, `${namespace}/paragraph`, 'core/list', `${namespace}/body-copy-carousel`, `${namespace}/body-copy-image`]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\n\nexport default function imageTextBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Custom Column\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"callout-column\";\n\tconst title = \"Card\";\n\tconst description = \"A single card.\";\n\tconst category = \"common\";\n    const icon = \"table-col-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        image_alt: {\n            type: \"String\",\n            default: \"\",\n        },\n        image_id: {\n            type: \"Number\",\n            default: 0,\n        },\n        image_url: {\n            type: \"String\",\n            default: \"\",\n        },\n        link: {\n            type: \"String\",\n            default: \"\",\n        },\n        link_text: {\n            type: \"String\",\n            default: \"read more\",\n        },\n        title: {\n            type: \"String\",\n            default: \"\",\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n        parent: [`${namespace}/callout-container`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                image_alt, \n                image_id, \n                image_url, \n                link, \n                link_text,\n                title\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Card</p>\n                    <section>\n                        <CustomImageUpload\n                            components={[\n                                {\n                                    value: image_url,\n                                    reference: 'image_url',\n                                    altValue: image_alt,\n                                    altReference: 'image_alt',\n                                    idValue: image_id,\n                                    idReference: 'image_id',\n                                    buttonText: 'Add Image',\n                                    imageClasses: ['image-text__image']\n                                }\n                            ]}\n                            onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                        />\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: title,\n                                    reference: 'title',\n                                    tagName: 'h2',\n                                    classes: ['heading-one'],\n                                    placeholder: \"Add a title for this card\"\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks allowedBlocks={[]} />\n                        )}\n                            <CustomRichText \n                                components={[\n                                    {\n                                        value: link,\n                                        reference: 'link',\n                                        tagName: 'p',\n                                        placeholder: \"Add a link for this card\",\n                                        classes: [],\n                                    },\n                                    {\n                                        value: link_text,\n                                        reference: 'link_text',\n                                        placeholder: \"Add link text for this card\",\n                                        tagName: 'p',\n                                        classes: [],\n                                    },\n                                ]}\n                                onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                            />\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nexport default function trmcAccordionBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"callout-container\";\n\tconst blockTitle = \"Cards - Image\";\n\tconst blockDescription = \"Creates a container for single callout cards.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"layout\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'alignment',\n        'columns',\n        'title',\n    ];\n    const attributes = {\n        columns: {\n            type: 'String',\n            default: '3',\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { description, columns, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className=\"custom-container\">\n                    <p className=\"block-title\">Cards - Image (set number of columns in block settings)</p>\n                    <BlockSettings \n                        controls={[   \n                            {\n                                type: 'select',\n                                label: '# of Columns',\n                                reference: 'columns',\n                                value: columns,\n                                options: [\n                                    // Value is the 12 / number of columns.\n                                    { label: \"Four\", value: \"3\" },\n                                    { label: \"Three\", value: \"4\" },\n                                    { label: \"Two\", value: \"6\" }\n                                ]\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading-two'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className={`col--${columns}`}>\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/callout-column`]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { columns, description, title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nexport default function trmcContentContainerBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"content-card-container\";\n\tconst blockTitle = \"Content Block - Cards\";\n\tconst blockDescription = \"Creates a container for content cards.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"layout\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n    const attributes = {\n        bg_color: {\n            type: 'String',\n            default: 'white'\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n        icon: {\n            type: 'Boolean',\n            default: true,\n        },\n        link: {\n            type: 'String',\n            default: ''\n        },\n        link_text: {\n            type: 'String',\n            default: 'Learn More'\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { bg_color, description, icon, link, link_text, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container block--${bg_color}`}>\n                    <p className=\"block-title\">Content Block - Cards (set background color and whether or not to use icons in the settings)</p>\n                    <BlockSettings\n                        title=\"Block Settings\"\n                        controls={[\n                            {\n                                type: 'select',\n                                label: 'Background Color',\n                                reference: 'bg_color',\n                                value: bg_color,\n                                options: [\n                                    { value: 'white', label: 'White' },\n                                    { value: 'grey', label: 'Grey' },\n                                    { value: 'black', label: 'Black' },\n                                    { value: 'red', label: 'Dark Red' },\n                                ]\n                            },\n                            {\n                                type: 'toggle',\n                                label: 'Card Icons',\n                                reference: 'icon',\n                                value: icon,\n                            },\n                        ]}\n                        onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading-two'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            },\n                            {\n                                reference: 'link',\n                                value: link,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add cta link (optional)',\n                            },\n                            {\n                                reference: 'link_text',\n                                value: link_text,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add cta link text (optional)',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className={icon ? `col--4` : `col--4 no-icon`}>\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/content-card`]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { columns, description, title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\n\nexport default function imageTextBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Custom Column\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"content-card\";\n\tconst title = \"Card\";\n\tconst description = \"A single content card.\";\n\tconst category = \"common\";\n    const icon = \"table-col-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        image_alt: {\n            type: \"String\",\n            default: \"\",\n        },\n        image_id: {\n            type: \"Number\",\n            default: 0,\n        },\n        image_url: {\n            type: \"String\",\n            default: \"\",\n        },\n        link_text: {\n            type: 'String',\n            default: '',\n        },\n        link_href: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: \"String\",\n            default: \"\",\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n        parent: [`${namespace}/content-card-container`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                image_alt, \n                image_id, \n                image_url, \n                title,\n                link_text,\n                link_href\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Card</p>\n                    <section>\n                        <div className=\"icon-upload\">\n                            <CustomImageUpload\n                                components={[\n                                    {\n                                        value: image_url,\n                                        reference: 'image_url',\n                                        altValue: image_alt,\n                                        altReference: 'image_alt',\n                                        idValue: image_id,\n                                        idReference: 'image_id',\n                                        buttonText: 'Add Icon',\n                                        imageClasses: ['image-text__image']\n                                    }\n                                ]}\n                                onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                            />\n                        </div>\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: title,\n                                    reference: 'title',\n                                    tagName: 'h2',\n                                    classes: ['heading-one'],\n                                    placeholder: \"Add a title for this card\"\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks allowedBlocks={[`${namespace}/paragraph-no-alignment`]} />\n                        )}\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: link_text,\n                                    reference: 'link_text',\n                                    tagName: 'p',\n                                    classes: ['link'],\n                                    placeholder: \"Add link text for a CTA (optional)\"\n                                },\n                                {\n                                    value: link_href,\n                                    reference: 'link_href',\n                                    tagName: 'p',\n                                    classes: ['link'],\n                                    placeholder: \"Add link for a CTA (optional)\"\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","import { namespace } from \"../helper-functions/constants\";\nimport customRichTextBlock from \"../reusable/custom-richtext-block.jsx\";\n\nconst blocks = [\n    {\n        slug: 'paragraph',\n        title: \"Paragraph\",\n        description: \"Add a paragraph\",\n        classes: \"paragraph-blog mt-10 md:mt-15 wp-block-pg-paragraph first:mt-0\",\n        category: \"common\",\n        icon: \"editor-paragraph\",\n        tagName: \"p\",\n        transforms: [\n            `heading-two`,\n            `heading-three`,\n            `heading-four`,\n            `legal`,\n        ]\n    },\n    {\n        slug: 'heading-two',\n        title: \"Heading Two\",\n        description: \"Add a second level header\",\n        classes: \"wp-block-pg-heading-two h3 md:h2 mt-11 md:mt-13 first:mt-0\",\n        category: \"common\",\n        icon: \"heading\",\n        tagName: \"h2\",\n        transforms: [\n            `paragraph`,\n            `heading-three`,\n            `heading-four`,\n            `legal`,\n        ]\n    },\n    {\n        slug: 'heading-three',\n        title: \"Heading Three\",\n        classes: \"h3 mt-11 md:mt-13 first:mt-0 wp-block-pg-heading-three first:mt-0\",\n        description: \"Add a third level header\",\n        category: \"common\",\n        icon: \"heading\",\n        tagName: \"h3\",\n        transforms: [\n            `paragraph`,\n            `heading-two`,\n            `heading-four`,\n            `legal`,\n        ]\n    },\n    {\n        slug: 'heading-four',\n        title: \"Heading Four\",\n        classes: \"h4 mt-9 md:mt-10 wp-block-pg-heading-four first:mt-0\",\n        description: \"Add a fourth level header\",\n        category: \"common\",\n        icon: \"heading\",\n        tagName: \"h4\",\n        transforms: [\n            `paragraph`,\n            `heading-two`,\n            `heading-three`,\n            `legal`,\n        ]\n    },\n    {\n        slug: 'legal',\n        title: \"Legal Text\",\n        classes: \"legal mt-8 wp-block-pg-paragraph first:mt-0\",\n        description: \"Add legal text\",\n        category: \"common\",\n        icon: \"editor-paragraph\",\n        tagName: \"p\",\n        transforms: [\n            `paragraph`,\n            `heading-two`,\n            `heading-three`,\n            `heading-four`,\n        ]\n    },\n]\n\nexport default function registerBodyCopyBlocks() {\n    blocks.forEach((block) => {\n        customRichTextBlock(block);\n    })\n}","/**\n * Embed Wrapper.\n */\n\nconst { addFilter } = wp.hooks;\nconst { Fragment } = wp.element;\n\nexport default function extendCoreVideo() {\n    const { __ } = wp.i18n;\n    const { createHigherOrderComponent } = wp.compose;\n    const { InspectorControls, MediaUpload } = wp.blockEditor;\n    const { PanelBody, Button, TextControl } = wp.components;\n\n    function customAttributes(props, name) {\n        if ('core/video' !== name && 'core/embed' !== name && 'core-embed/youtube' !== name && 'core-embed/vimeo' !== name ) {\n            return props;\n        }\n    \n        const customAttributes = {\n            image_id: {\n                type: 'Number',\n                default: 0,\n            },\n            image_url: {\n                type: 'String',\n                default: '',\n            },\n            image_alt: {\n                type: 'String',\n                default: '',\n            },\n            caption: {\n                type: 'String',\n                default: '',\n            }\n        }\n\n        const attributes = {\n            ...props.attributes,\n            ...customAttributes,\n        };\n\n        const description = `${props.description}`;\n\n        return {\n            ...props,\n            attributes,\n            description,\n        };\n    }\n\n    const getImageButton = (openEvent, label) => {\n        return (\n            <div className=\"button-container\">\n                <Button \n                    onClick={ openEvent }\n                    className='button button-large'\n                >\n                {label}\n                </Button>\n            </div>\n        );\n    };\n\n    const withInspectorControls = createHigherOrderComponent((BlockEdit) => {\n        return (props) => {\n\n            if ( 'core/video' !== props.name && 'core/embed' !== props.name && 'core-embed/youtube' !== props.name && 'core-embed/vimeo' !== props.name ) {\n                return <BlockEdit {...props} />;\n            }\n\n            const { attributes, setAttributes } = props;\n            const { image_id, image_alt, image_url, caption } = attributes;\n            const label = image_url !== '' ? 'Update Placeholder Image' : 'Add Placeholder Image';  \n            function updateAttributeValue(attribute, value) {\n                setAttributes({ [attribute]: value });\n            }\n            return [\n                <Fragment>\n                    <InspectorControls>\n                        <PanelBody title={__('Embed Video Settings')}>\n                            {\n                                image_url !== '' ? \n                                <div>\n                                    <p>Current Placeholder Image:</p>\n                                    <img  src={image_url}  /> \n                                    <div className=\"button-container\"> \n                                        <Button \n                                            onClick={ function() { setAttributes({ 'image_alt': '', 'image_url': '', 'image_id': ''}) } }\n                                        >\n                                            Remove Image\n                                        </Button>\n                                    </div>\n                                </div>\n                                \n                                : \n                                <p className=\"copy--italic\">Please add a placeholder image.</p>\n                            }\n                            <MediaUpload\n                                onSelect={ media => { setAttributes({'image_alt': media.alt, 'image_url': media.url, 'image_id': media.id.toString() }); } }\n                                type=\"image\"\n                                value={ image_id }\n                                render={ ({ open }) => getImageButton(open, label ) }\n                            />\n                            <TextControl \n                                value={caption}\n                                onChange={(value) => { updateAttributeValue('caption', value) }}\n                                label=\"Caption (Optional):\"\n                            />\n                        </PanelBody>\n                    </InspectorControls>\n                    <BlockEdit {...props} />\n                </Fragment>,\n                null\n            ];\n        };\n    }, 'withInspectorControl');\n\n\n\n    // Add attribute to core block\n    addFilter(\n        'blocks.registerBlockType',\n        'pg/core-embed',\n        customAttributes\n    );\n\n    // Add inspector controls for attribute\n    addFilter(\n        'editor.BlockEdit',\n        'pg/core-embed',\n        withInspectorControls\n    );\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function jobBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const { i18n } = wp;\n\n    const blockSlug = \"job-block\";\n\tconst blockTitle = \"Create job block\";\n\tconst blockDescription = \"Component to create job block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"users\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        emptyState: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title, emptyState } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-job__block\">\n                    <p className=\"block-title\">Jobs Block</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title\"\n                            },\n                        ]}\n                    />\n                    <div>\n                        <CustomRichText \n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                            components={[\n                                {\n                                    value: emptyState,\n                                    reference: \"emptyState\",\n                                    tagName: \"p\",\n                                }\n                            ]}\n                        />\n                    </div>    \n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title, emptyState } = attributes;\n\t\t},\n\t});\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from \"../reusable/custom-richtext-component.jsx\";\n\nexport default function iconListContainerBlock() {\n  const { registerBlockType, createBlock } = wp.blocks;\n  const { InnerBlocks } = wp.blockEditor;\n  const { ToggleControl } = wp.components;\n  const { i18n } = wp;\n\n  const blockSlug = \"icon-list-container-block\"; // slug for the block\n  const blockTitle = \"Icon list container block\";\n  const blockDescription = \"Component to create icon list container block\";\n  const blockCategory = \"common\";\n  const blockIcon = \"block-default\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n  const attributes = {\n    title: {\n      type: \"String\",\n      default: \"\",\n    },\n    description: {\n      type: \"String\",\n      default: \"\",\n    },\n    icon: {\n      type: \"Boolean\",\n      default: false,\n    },\n  };\n\n  registerBlockType(`${namespace}/${blockSlug}`, {\n    title: i18n.__(blockTitle),\n    description: i18n.__(blockDescription),\n    category: blockCategory,\n    icon: blockIcon,\n    attributes,\n    edit: (props, editor = false, save = false) => {\n      const { attributes, setAttributes } = props;\n      const { title, description, icon } = attributes;\n\n      function updateAttributeValue(attribute, value) {\n        setAttributes({ [attribute]: value });\n      }\n\n      return [\n        <div className={`custom-container`}>\n          <p className=\"block-title\">Icon List Container Block</p>\n          <CustomRichText\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n            components={[\n              {\n                value: title,\n                reference: \"title\",\n                tagName: \"p\",\n                placeholder: \"Please provide a title (optional)\",\n              },\n            ]}\n          />\n          <CustomRichText\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n            components={[\n              {\n                value: description,\n                reference: \"description\",\n                tagName: \"p\",\n                placeholder: \"Please provide a description (optional)\",\n              },\n            ]}\n          />\n          <ToggleControl\n            label={'Style: check for with icon or leave unchecked for without icon'} \n            checked={icon}\n            onChange={(change) => {\n                updateAttributeValue(\"icon\", change);\n            }}\n          />\n          {save ? (\n            <InnerBlocks.Content />\n          ) : (\n            <InnerBlocks\n              allowedBlocks={[`${namespace}/custom-icon-list-item-block`]}\n            />\n          )}\n        </div>,\n      ];\n    },\n    save: ({ attributes }) => {\n      const { title, description, icon } = attributes;\n      return <InnerBlocks.Content />;\n    },\n  });\n}\n","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from \"../reusable/custom-richtext-component.jsx\";\nimport CustomImageUpload from \"../reusable/custom-image-upload.jsx\";\n\n\nexport default function iconListItemBlock() {\n  const { registerBlockType, createBlock } = wp.blocks;\n  const { i18n } = wp;\n  const {\n    InnerBlocks,\n} = wp.blockEditor;\n\n  const blockSlug = \"icon-list-item-block\"; // slug for the block\n  const blockTitle = \"Icon list item block\";\n  const blockDescription = \"Component to create icon list item block\";\n  const blockCategory = \"common\";\n  const blockIcon = \"columns\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n  const attributes = {\n    image_id: {\n      type: \"Number\",\n      default: 0,\n    },\n    image_alt: {\n      type: \"String\",\n      default: \"\",\n    },\n    image_url: {\n      type: \"String\",\n      default: \"\",\n    },\n    subtitle: {\n      type: \"String\",\n      default: \"\",\n    },\n    copy: {\n      type: \"String\",\n      default: \"\",\n    },\n  };\n\n  registerBlockType(`${namespace}/${blockSlug}`, {\n    title: i18n.__(blockTitle),\n    description: i18n.__(blockDescription),\n    category: blockCategory,\n    icon: blockIcon,\n    attributes,\n    parent: [`${namespace}/icon-list-container-block`],\n    edit: (props, editor = false, save = false) => {\n      const { attributes, setAttributes } = props;\n      const { subtitle, copy, image_url, image_alt, image_id } = attributes;\n\n      function updateAttributeValue(attribute, value) {\n        setAttributes({ [attribute]: value });\n      }\n\n      return [\n        <div className={`custom-child`}>\n          <p className=\"block-title\">Icon List Item</p>\n          <div>\n            <CustomImageUpload\n              components={[\n                {\n                  value: image_url,\n                  reference: \"image_url\",\n                  altValue: image_alt,\n                  altReference: \"image_alt\",\n                  idValue: image_id,\n                  idReference: \"image_id\",\n                  buttonText: \"Add Icon (optional)\",\n                  imageClasses: [\"image-text__image\"],\n                },\n              ]}\n              onChange={(attribute, change) => {\n                updateAttributeValue(attribute, change);\n              }}\n            />\n            <CustomRichText\n              components={[\n                {\n                  value: subtitle,\n                  reference: \"subtitle\",\n                  tagName: \"p\",\n                  classes: [\"p\"],\n                  placeholder: \"Add Subtitle (optional)\",\n                },\n              ]}\n              onChange={(attribute, change) => {\n                updateAttributeValue(attribute, change);\n              }}\n            />\n             <CustomRichText\n              components={[\n                {\n                  value: copy,\n                  reference: \"copy\",\n                  tagName: \"p\",\n                  classes: [\"p\"],\n                  placeholder: \"Add Copy (optional)\",\n                },\n              ]}\n              onChange={(attribute, change) => {\n                updateAttributeValue(attribute, change);\n              }}\n            />\n          </div>\n        </div>,\n      ];\n    },\n    save: () => {\n      const { subtitle, copy, image_url, image_alt, image_id } = attributes;\n      return <InnerBlocks.Content />;\n    },\n  });\n}\n","//Helpers\nimport { namespace } from '../blocks/helper-functions/constants';\n\nimport CustomImageUpload from \"../blocks/reusable/custom-image-upload.jsx\";\nimport CustomRichText from \"../blocks/reusable/custom-richtext-component.jsx\";\n\nexport default function imageBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"custom-image\";\n\tconst blockTitle = \"Media - Image\";\n\tconst blockDescription = \"A single image upload.\";\n\tconst blockCategory = \"media\";\n    const blockIcon = \"format-image\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: blockTitle,\n\t\tdescription: blockDescription,\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes: {\n            caption: {\n                type: 'String',\n                default: '',\n            },\n            image_alt: {\n                type: 'String',\n                default: '',\n            },\n            image_url: {\n                type: 'String',\n                default: '',\n            },\n            image_id: {\n                type: 'Number',\n                default: 0,\n            }\n        },\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n            const { caption, image_id, image_url, image_alt } = attributes;\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div className=\"custom-component\">\n                    <p className=\"block-title\">Media - Image</p>\n                    <CustomImageUpload\n                        components={[\n                            {\n                                value: image_url,\n                                reference: 'image_url',\n                                altValue: image_alt,\n                                altReference: 'image_alt',\n                                idValue: image_id,\n                                idReference: 'image_id',\n                                buttonText: 'Add an image',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: caption,\n                                reference: \"caption\",\n                                classes: ['caption'],\n                                tagName: \"p\",\n                                settings: [],\n                                placeholder: \"Please provide a caption for your image\"\n                            },\n                        ]}\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n            const { caption, image_id, image_alt, image_url } = attributes;\n            return null;\n        },\n\t});\n}","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function listImageBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Image List Block\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"image-list\";\n\tconst title = \"List\";\n\tconst description = \"A single list.\";\n\tconst category = \"common\";\n    const icon = \"align-left\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        image_id: {\n            type: 'Number',\n            default: 0,\n        },\n        image_alt: {\n            type: 'String',\n            default: '',\n        },\n        image_url: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        parent: [`${namespace}/image-list-container`],\n        attributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                image_url, \n                image_alt, \n                image_id, \n                title,\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <div className={`custom-child`}>\n                    <p className=\"block-title\">List</p>\n                    <div>\n                        <CustomImageUpload\n                            components={[\n                                {\n                                    value: image_url,\n                                    reference: 'image_url',\n                                    altValue: image_alt,\n                                    altReference: 'image_alt',\n                                    idValue: image_id,\n                                    idReference: 'image_id',\n                                    buttonText: 'Add Icon (optional)',\n                                    imageClasses: ['image-text__image']\n                                }\n                            ]}\n                            onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                        />\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: title,\n                                    reference: 'title',\n                                    tagName: 'h4',\n                                    classes: ['heading_three'],\n                                    placeholder: 'Add title'\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks allowedBlocks={['core/list', `${namespace}/paragraph-no-alignment`]} />\n                        )}  \n                    </div>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function listImageContainerBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Image List Container Block\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"image-list-container\";\n\tconst title = \"Content Block - Square Image\";\n\tconst description = \"Container with an image and lists.\";\n\tconst category = \"containers\";\n    const icon = \"align-pull-left\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        bg_color: {\n            type: 'String',\n            default: 'white',\n        },\n        image_id: {\n            type: 'Number',\n            default: 0,\n        },\n        image_alt: {\n            type: 'String',\n            default: '',\n        },\n        image_url: {\n            type: 'String',\n            default: '',\n        },\n        reverse: {\n            type: 'Boolean',\n            default: false,\n        },\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                bg_color,\n                description,\n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title,\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'toggle',\n                            label: 'Reverse Layout',\n                            reference: 'reverse',\n                            value: reverse,\n                        },\n                        {\n                            type: 'select',\n                            label: 'Background Color',\n                            reference: 'bg_color',\n                            value: bg_color,\n                            options: [\n                                { value: 'white', label: 'White' },\n                                { value: 'grey', label: 'Grey' },\n                                { value: 'black', label: 'Black' },\n                                { value: 'red', label: 'Dark Red' },\n                            ]\n                        }\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div className={`custom-container block--${bg_color}`}>\n                    <p className=\"block-title\">Content Block - Square Image</p>\n                    <section>\n                        <div className={reverse ? 'row reverse' : 'row' }>\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                <CustomImageUpload\n                                    components={[\n                                        {\n                                            value: image_url,\n                                            reference: 'image_url',\n                                            altValue: image_alt,\n                                            altReference: 'image_alt',\n                                            idValue: image_id,\n                                            idReference: 'image_id',\n                                            buttonText: 'Add Image',\n                                            imageClasses: ['image-text__image']\n                                        }\n                                    ]}\n                                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                                />\n                            </div>\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                \n                                {save ? (\n                                    <InnerBlocks.Content />\n                                ) : (\n                                    <InnerBlocks \n                                        allowedBlocks={[`${namespace}/image-list`]} \n                                        template={[[`${namespace}/image-list`]]} \n                                    />\n                                )}\n                            </div>\n                            \n                        </div>\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","// Helpers\nimport { namespace } from './helper-functions/constants.js';\nimport defaultAttrs from './helper-functions/default-attrs';\n\n// Reusable\nimport CustomRichText from './reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from './reusable/custom-image-upload.jsx';\nimport BlockSettings from './reusable/block-custom-settings.jsx';\n\nexport default function imageTextBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Image Text Block\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"image-text\";\n\tconst title = \"Content Block - Slanted Image\";\n\tconst description = \"A reversible component with image one side and text on the other.\";\n\tconst category = \"common\";\n    const icon = \"align-left\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttributes = [\n        'image_url', \n        'image_alt', \n        'title', \n        'bg_color'\n    ];\n    const attributes = defaultAttrs(stringAttributes);\n    attributes['reverse'] = {\n        type: 'boolean',\n        default: false,\n    }\n    attributes['image_id'] = {\n        type: 'integer',\n        default: 0,\n    }\n    attributes['bg_color']['default'] = 'white';\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n    attributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                bg_color,\n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'select',\n                            label: 'Background color',\n                            reference: 'bg_color',\n                            value: bg_color,\n                            options: [\n                                { label: 'White', value: 'white' },\n                                { label: 'Grey', value: 'grey' }\n                            ]\n                        },\n                        {\n                            type: 'toggle',\n                            label: 'Reverse Layout',\n                            reference: 'reverse',\n                            value: reverse,\n                        }\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div className={`image-text__container custom-component block--${bg_color}`}>\n                    <p className=\"block-title\">Content Block - Slanted Image</p>\n                    <section>\n                        <div className={reverse ? 'row reverse' : 'row' }>\n\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                <CustomRichText \n                                    components={[\n                                        {\n                                        value: title,\n                                        reference: 'title',\n                                        tagName: 'h2',\n                                        classes: ['heading-one'],\n                                        },\n                                    ]}\n                                    onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                                />\n                                {save ? (\n                                    <InnerBlocks.Content />\n                                ) : (\n                                    <InnerBlocks allowedBlocks={[`${namespace}/paragraph-no-alignment`, 'core/list', 'core/buttons']} />\n                                )}\n                            </div>\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                <CustomImageUpload\n                                    components={[\n                                        {\n                                            value: image_url,\n                                            reference: 'image_url',\n                                            altValue: image_alt,\n                                            altReference: 'image_alt',\n                                            idValue: image_id,\n                                            idReference: 'image_id',\n                                            buttonText: 'Add Image',\n                                            imageClasses: ['image-text__image']\n                                        }\n                                    ]}\n                                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                                />\n                            </div>\n                        </div>\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nexport default function trmcLogoContainerBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"logos-container\";\n\tconst blockTitle = \"Logo Parade\";\n\tconst blockDescription = \"Creates a container for logos parade.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"awards\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        bg_color: {\n            type: 'String',\n            default: 'white'\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { bg_color, description, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container block--${bg_color} }` }>\n                    <p className=\"block-title\">Logo Parade</p>\n                    <BlockSettings \n                        controls={[   \n                            {\n                                type: 'select',\n                                label: 'Background Color',\n                                reference: 'bg_color',\n                                value: bg_color,\n                                options: [\n                                    { value: 'white', label: 'White'},\n                                    { value: 'grey', label: 'Grey' }\n                                ]\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading_one'],\n                                placeholder: 'Logos title here',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add a description'\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className=\"col--4\">\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/logo`]}\n                                template={[[`${namespace}/logo`]]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","//Helpers\nimport { namespace } from '../helper-functions/constants';\n\nimport CustomImageUpload from \"../reusable/custom-image-upload.jsx\";\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function logoBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"logo\";\n\tconst blockTitle = \"Logo\";\n\tconst blockDescription = \"A single logo.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"format-image\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: blockTitle,\n\t\tdescription: blockDescription,\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes: {\n            image_alt: {\n                type: 'String',\n                default: '',\n            },\n            image_url: {\n                type: 'String',\n                default: '',\n            },\n            image_id: {\n                type: 'Number',\n                default: 0,\n            },\n            link: {\n                type: 'String',\n                default: '',\n            }\n        },\n        parent: [`${namespace}/logos-container`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n            const { image_id, image_url, image_alt, link } = attributes;\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Logo</p>\n                    <CustomImageUpload\n                        components={[\n                            {\n                                value: image_url,\n                                reference: 'image_url',\n                                altValue: image_alt,\n                                altReference: 'image_alt',\n                                idValue: image_id,\n                                idReference: 'image_id',\n                                buttonText: 'Add an image',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'link',\n                                value: link,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add a link for this logo (optional)',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n            const { image_id, image_alt, image_url } = attributes;\n            return null;\n        },\n\t});\n}","import { namespace } from '../helper-functions/constants';\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function authorMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n\n    const meta_fields = [\n        'external_link',\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/author-meta-block`, {\n\t\ttitle: 'Author Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { external_link } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">Author Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={external_link}\n                                onChange={(value) => { updateAttributeValue('external_link', value) }}\n                                label=\"External Link:\"\n                            />\n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport SelectAuthors from '../reusable/select-authors.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function researchBlogMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n    const meta_fields = [\n        'publication_date', \n        'time_to_read',\n        'authors'\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/news-meta-block`, {\n\t\ttitle: 'News Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { authors, publication_date, time_to_read } = attributes;\n            \n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n    \n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">News Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={publication_date}\n                                onChange={(value) => { updateAttributeValue('publication_date', value) }}\n                                label=\"Publication Date (MM/DD/YYYY):\"\n                            />\n                            <TextControl\n                                value={time_to_read}\n                                type=\"number\"\n                                onChange={(value) => { updateAttributeValue('time_to_read', value) }}\n                                label=\"Time to Read:\"\n                            />\n                            <SelectAuthors \n                                authors={authors}\n                                updateAttributeValue={updateAttributeValue}\n                            />\n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nimport CustomVideoUpload from \"../reusable/custom-video-upload.jsx\";\n\nexport default function pageMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl, TextareaControl, RadioControl, SelectControl, ToggleControl, Button  } = wp.components;\n    const {\n        Inserter\n    } = wp.blockEditor;\n\n    const meta_fields = [\n        'headline',\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/page-meta-block`, {\n\t\ttitle: 'Page Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\n            const className = `${props.className} meta-block`;\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                headline, \n            } = attributes;\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className={className}>\n                    <div className=\"page-settings__controls\">\n                        <h4>Header Settings</h4>\n                        <TextareaControl\n                            value={headline}\n                            onChange={(value) => { updateAttributeValue('headline', value) }}\n                            label=\"Headline:\"\n                        />\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n\n","import { namespace } from '../helper-functions/constants';\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nimport SelectAuthors from '../reusable/select-authors.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function publicationMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n    const meta_fields = [\n        'authors',\n        'abstract',\n        'code',            \n        'paper',\n        'blog',\n        'publication_date',            \n        'time_to_read',            \n        'citation', \n        'citation_link'\n    ]\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/publications-meta-block`, {\n\t\ttitle: 'Publications Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                abstract,\n                authors,\n                blog,\n                citation, \n                citation_link,\n                code,            \n                paper,\n                publication_date,            \n                time_to_read,            \n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">Publications Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={publication_date}\n                                onChange={(value) => { updateAttributeValue('publication_date', value) }}\n                                label=\"Publication Date (YYYY/MM/DD):\"\n                            />\n                            <TextControl\n                                value={abstract}\n                                onChange={(value) => { updateAttributeValue('abstract', value) }}\n                                label=\"Abstract:\"\n                            />\n                            <TextControl\n                                value={code}\n                                onChange={(value) => { updateAttributeValue('code', value) }}\n                                label=\"Code:\"\n                            />\n                            <TextControl\n                                value={paper}\n                                onChange={(value) => { updateAttributeValue('paper', value) }}\n                                label=\"Paper:\"\n                            />\n                            <TextControl\n                                value={blog}\n                                onChange={(value) => { updateAttributeValue('blog', value) }}\n                                label=\"Blog:\"\n                            />\n                             <TextControl\n                                value={time_to_read}\n                                onChange={(value) => { updateAttributeValue('time_to_read', value) }}\n                                label=\"Time to Read:\"\n                            />\n                            <TextControl\n                                value={citation}\n                                onChange={(value) => { updateAttributeValue('citation', value) }}\n                                label=\"Citation:\"\n                            />\n                            <TextControl\n                                value={citation_link}\n                                onChange={(value) => { updateAttributeValue('citation_link', value) }}\n                                label=\"Citation Link:\"\n                            />\n                           \n                            <SelectAuthors \n                                authors={authors}\n                                updateAttributeValue={updateAttributeValue}\n                            />\n                \n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\n\nimport SelectAuthors from '../reusable/select-authors.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function researchBlogMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n    const meta_fields = [\n        'publication_date', \n        'time_to_read',\n        'authors'\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/research-blogs-meta-block`, {\n\t\ttitle: 'Research Blogs Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { authors, publication_date, time_to_read } = attributes;\n            \n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n    \n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">Research Blog Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={publication_date}\n                                onChange={(value) => { updateAttributeValue('publication_date', value) }}\n                                label=\"Publication Date (MM/DD/YYYY):\"\n                            />\n                            <TextControl\n                                value={time_to_read}\n                                type=\"number\"\n                                onChange={(value) => { updateAttributeValue('time_to_read', value) }}\n                                label=\"Time to Read:\"\n                            />\n                            <SelectAuthors \n                                authors={authors}\n                                updateAttributeValue={updateAttributeValue}\n                            />\n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function leadershipMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n\n    const meta_fields = [\n        'position',\n        'education'\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/team-member-meta-block`, {\n\t\ttitle: 'Team Member Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { position, education } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">Team Member Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={position}\n                                onChange={(value) => { updateAttributeValue('position', value) }}\n                                label=\"Position:\"\n                            />\n                            <TextControl\n                                value={education}\n                                onChange={(value) => { updateAttributeValue('education', value) }}\n                                label=\"Education:\"\n                            />\n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}","import { namespace } from \"../helper-functions/constants\";\nimport CustomRichText from \"../reusable/custom-richtext-component.jsx\";\n\nexport default function pageStripGraphicContainer() {\n  const { registerBlockType, createBlock } = wp.blocks;\n  const { InnerBlocks } = wp.blockEditor;\n  const { useSelect } = wp.data;\n  const { i18n } = wp;\n\n  const blockSlug = \"page-strip-graphic-container\"; // slug for the block\n  const blockTitle = \"Create page strip graphic container block\";\n  const blockDescription =\n    \"Component to create page strip graphic container block\";\n  const blockCategory = \"common\";\n  const blockIcon = \"admin-users\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n  const attributes = {\n    title: {\n      type: \"String\",\n      default: \"\",\n    },\n    limit: {\n      type: \"Number\",\n      default: 0,\n    },\n  };\n\n  registerBlockType(`${namespace}/${blockSlug}`, {\n    title: i18n.__(blockTitle),\n    description: i18n.__(blockDescription),\n    category: blockCategory,\n    icon: blockIcon,\n    attributes,\n    edit: (props, editor = false, save = false) => {\n      const innerBlockCount = useSelect(\n        (select) =>\n          select(\"core/block-editor\").getBlock(props.clientId).innerBlocks\n      );\n\n      return [\n        <div class=\"custom-component\">\n          <p className=\"block-title\">Page Strip Graphic Container Block</p>\n          <InnerBlocks\n            allowedBlocks={[`${namespace}/page-strip-graphic`]}\n            renderAppender={() => {\n              if (innerBlockCount.length < 2) {\n                return <InnerBlocks.ButtonBlockAppender />;\n              } else {\n                return false;\n              }\n            }}\n          />\n        </div>,\n      ];\n    },\n    save: () => {\n      return <InnerBlocks.Content />;\n    },\n  });\n}\n","// Helpers\nimport { namespace } from \"../helper-functions/constants.js\";\n\n// Reusable\nimport CustomRichText from \"../reusable/custom-richtext-component.jsx\";\nimport CustomImageUpload from \"../reusable/custom-image-upload.jsx\";\n\nexport default function trmcPageStripGraphicBlock() {\n  /**\n   * GUTENBERG BLOCK - Page Strip Graphic\n   */\n  const { registerBlockType, createBlock } = wp.blocks;\n  const { InnerBlocks } = wp.blockEditor;\n    const { ToggleControl } = wp.components;\n\n  const { i18n } = wp;\n\n  const slug = \"page-strip-graphic\";\n  const title = \"Page Strip - Image  BG\";\n  const description = \"A page strip with a background image.\";\n  const category = \"page-strips\";\n  const icon = \"format-image\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n  const attributes = {\n    title: {\n      type: \"String\",\n      default: \"\",\n    },\n    copy: {\n      type: \"String\",\n      default: \"\",\n    },\n    btn_url: {\n      type: \"String\",\n      default: \"\",\n    },\n    btn_text: {\n      type: \"String\",\n      default: \"\",\n    },\n    image_id: {\n      type: \"Number\",\n      default: 0,\n    },\n    image_alt: {\n      type: \"String\",\n      default: \"\",\n    },\n    image_url: {\n      type: \"String\",\n      default: \"\",\n    },\n    image_id_mobile: {\n      type: \"Number\",\n      default: 0,\n    },\n    image_alt_mobile: {\n      type: \"String\",\n      default: \"\",\n    },\n    image_url_mobile: {\n      type: \"String\",\n      default: \"\",\n    },\n    icon: {\n      type: \"String\",\n      default: \"\",\n    },\n  };\n  registerBlockType(`${namespace}/${slug}`, {\n    title: i18n.__(title, `${namespace}`),\n    description: i18n.__(description, `${namespace}`),\n    category,\n    icon,\n    attributes,\n    transforms: {\n      to: [\n        {\n          type: \"block\",\n          blocks: [`${namespace}/page-strip`],\n          transform: (attributes, innerBlocks) => {\n            return wp.blocks.createBlock(\n              `${namespace}/page-strip`,\n              attributes,\n              innerBlocks\n            );\n          },\n        },\n      ],\n    },\n    parent: [`${namespace}/page-strip-graphic-container`],\n    edit: (props, editor = false, save = false) => {\n      const { setAttributes, attributes } = props;\n      const {\n        title,\n        copy,\n        btn_url,\n        btn_text,\n        image_alt,\n        image_id,\n        image_url,\n        image_url_mobile,\n        image_id_mobile,\n        image_alt_mobile,\n        icon,\n      } = attributes;\n\n      function updateAttributeValue(attribute, value) {\n        setAttributes({ [attribute]: value });\n      }\n      return [\n        <section class=\"custom-child\">\n          <p className=\"block-title\">Graphic Page Strip</p>\n          <CustomImageUpload\n            components={[\n              {\n                value: image_url,\n                reference: \"image_url\",\n                altValue: image_alt,\n                altReference: \"image_alt\",\n                idValue: image_id,\n                idReference: \"image_id\",\n                buttonText: \"Add an image\",\n              },\n            ]}\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n          />\n           <CustomImageUpload\n            components={[\n              {\n                value: image_url_mobile,\n                reference: \"image_url_mobile\",\n                altValue: image_alt_mobile,\n                altReference: \"image_alt_mobile\",\n                idValue: image_id_mobile,\n                idReference: \"image_id_mobile\",\n                buttonText: \"Add a mobile image\",\n              },\n            ]}\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n          />\n          <CustomRichText\n            components={[\n              {\n                value: title,\n                reference: \"title\",\n                tagName: \"h2\",\n                classes: [\"heading_one\"],\n                placeholder: \"Please provide a title (optional)\",\n              },\n            ]}\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n          />\n          <CustomRichText\n            components={[\n              {\n                value: copy,\n                reference: \"copy\",\n                tagName: \"p\",\n                classes: [\"paragraph\"],\n                placeholder: \"Please provide copy (optional)\",\n              },\n            ]}\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n          />\n          <CustomRichText\n            components={[\n              {\n                value: btn_url,\n                reference: \"btn_url\",\n                tagName: \"p\",\n                classes: [\"paragraph\"],\n                placeholder: \"Please provide button url (optional)\",\n              },\n            ]}\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n          />\n          <CustomRichText\n            components={[\n              {\n                value: btn_text,\n                reference: \"btn_text\",\n                tagName: \"p\",\n                classes: [\"paragraph\"],\n                placeholder: \"Please provide button text (optional)\",\n              },\n            ]}\n            onChange={(attribute, change) => {\n              updateAttributeValue(attribute, change);\n            }}\n          />\n          <ToggleControl\n            label={\n              \"Style: check for white arrow or leave unchecked for black arrow\"\n            }\n            checked={icon}\n            onChange={(change) => {\n              updateAttributeValue(\"icon\", change);\n            }}\n          />\n        </section>,\n      ];\n    },\n    save: ({ attributes }) => {\n      const { title, copy, btn_url, btn_text, image_url, icon, image_url_mobile } = attributes;\n      return <InnerBlocks.Content />;\n    },\n  });\n}\n","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\nimport defaultAttrs from '../helper-functions/default-attrs';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function pageStripBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Page Strip\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"page-strip\";\n\tconst title = \"Page Strip\";\n\tconst description = \"A page strip with optional CTA.\";\n\tconst category = \"page-strips\";\n    const icon = \"align-center\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttributes = [\n        'bg_color', \n        'title', \n    ];\n    const attributes = defaultAttrs(stringAttributes);\n    \n    attributes['bg_color']['default'] = 'white';\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n        transforms: {\n            to: [\n                {\n                    type: \"block\",\n                    blocks: [`${namespace}/page-strip-graphic`],\n                    transform: ( attributes, innerBlocks ) => {\n                        return wp.blocks.createBlock(\n                            `${namespace}/page-strip-graphic`,\n                            attributes,\n                            innerBlocks\n                        );\n                    },\n                },\n            ]\n        },\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                bg_color,\n                title\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'select',\n                            label: 'Background Color',\n                            reference: 'bg_color',\n                            value: bg_color,\n                            options: [\n                                { value: 'white', label: 'White' },\n                                { value: 'grey', label: 'Grey' },\n                                { value: 'black', label: 'Black' },\n                                { value: 'red', label: 'Dark Red' },\n                                { value: 'red-lt', label: 'Light Red' },\n                            ]\n                        }\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div className={`block--${bg_color} custom-component`}>\n                    <p className=\"block-title\">Page Strip</p>\n                    <section>\n                        <div>\n                            <div>\n                                <CustomRichText \n                                    components={[\n                                        {\n                                            value: title,\n                                            reference: 'title',\n                                            tagName: 'h2',\n                                            classes: ['heading_one'],\n                                            placeholder: \"Please provide a title\"\n                                        },\n                                    ]}\n                                    onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                                />\n                                {save ? (\n                                    <InnerBlocks.Content />\n                                ) : (\n                                    <InnerBlocks allowedBlocks={[`${namespace}/paragraph-no-alignment`, 'core/buttons']} />\n                                )}\n                            </div>\n                        </div>\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const {\n                bg_color,\n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function featuredPostsContainerBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Featured Posts Container\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"featured-posts-container\";\n\tconst title = \"Featured Post(s)\";\n\tconst description = \"A container for one or more featured post.\";\n\tconst category = \"common\";\n    const icon = \"welcome-write-blog\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        columns: {\n            type: 'String',\n            default: '12',\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                columns\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'radio',\n                            label: 'Number of Columns',\n                            reference: 'columns',\n                            value: columns,\n                            options: [\n                                { label: 'One', value: '12' },\n                                { label: 'Two', value: '6' }\n                            ]\n                        },\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div className={`custom-container`}>\n                    <p className=\"block-title\">Featured Post(s)</p>\n                    {save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/select-research-blogs`, `${namespace}/select-news`]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                columns\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function bibtexBlock() {\n    const { registerBlockType } = wp.blocks;\n    const {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const blockSlug = \"bibtex\"; // slug for the block\n\tconst blockTitle = \"Bibtex\";\n\tconst blockDescription = \"Component to add bibtex to a publication\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"archive\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        entry: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { entry } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-component\">\n                    <p class=\"block-title\">Bibtex</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: entry,\n                                reference: \"entry\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide the bibtext string\",\n                                settings: []\n                            },\n                        ]}\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { entry } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}  ","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function publicationsContainerBlock() {\n    const { registerBlockType } = wp.blocks;\n    const {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const blockSlug = \"publications-container\"; // slug for the block\n\tconst blockTitle = \"Publications container\";\n\tconst blockDescription = \"Component to create publications container block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"archive\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        link: {\n            type: 'String',\n            default: '',\n        }\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title, link } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-container\">\n                    <p class=\"block-title\">Publications List Container</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title (optional)\",\n                                settings: []\n                            },\n                        ]}\n                    />\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: link,\n                                reference: \"link\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a link for the View All button\",\n                                settings: []\n                            },\n                        ]}\n                    />\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/select-publications`, `${namespace}/select-research-blogs`, `${namespace}/select-news`]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title, link } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}  ","import { namespace } from \"../helper-functions/constants\";\nimport selectPostBlock from \"../reusable/custom-post-column.jsx\";\n\nexport default function selectPostsBlocks() {\n    const parent = [`${namespace}/publications-container`, `${namespace}/carousel`, `${namespace}/featured-posts-container`];\n    const icon = 'open-folder';\n    const selectBlocks = [\n        {\n            icon,\n            parent: [`${namespace}/publications-container`], \n            slug: 'publications',\n            single: 'Publication',\n        },\n        {\n            icon,\n            parent, \n            slug: 'research-blogs',\n            single: 'Research',\n        },\n        {\n            icon,\n            parent, \n            slug: 'news',\n            single: 'News',\n        },\n    ]\n    selectBlocks.forEach((block) => selectPostBlock(block));\n}","{/* \n\nABOUT\nBlock Settings is a custom simple component to easily add a side panel with settings to any custom Gutenberg Block\n\nPROPS \n    title \n        The title for the panel in the sidebar.\n\n    controls\n        An array of objects. Each object is a single setting with the following fields. \n        - type : Can be 'radio', 'select', or 'text'\n        - label : The label for the controls (will be passed through an i18n function)\n        - options : An array of objects, each with a \"label\" and \"value\" field (only for selects and radios).\n        - reference : The name of the attribute it controls\n        - value : The value of the attribute\n\n    onChange\n        A function to update the attribute on the parent on changes in the child. Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n    \n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\n    EXAMPLE \n    Needs to be imported before top of export function. \n\n    <BlockSettings\n        title=\"Block Settings\"\n        controls={[\n            { \n                type: 'radio',\n                label: 'Number of Columns',\n                options: [\n                    { value: '2', label: '2' },\n                    { value: '3', label: '3' },\n                    { value: '4', label: '4' },\n                ],\n                reference: 'columns',\n                value: columns,\n            },\n            { \n                type: 'radio',\n                label: 'Column Style',\n                options: [\n                    { value: 'icon', label: 'With icon' },\n                    { value: 'no-icon', label: 'Without icon' },\n                ],\n                reference: 'columnStyle',\n                value: columnStyle,\n            }\n        ]}\n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    />\n    \n*/}\n\n// Created a custom errors function allow for clearer feedback.\nimport customErrors from '../helper-functions/custom-error.js';\n\nexport default function BlockSettings(props) {\n    const {\n        InspectorControls,\n        MediaUpload\n    } = wp.blockEditor;\n    const {\n        PanelBody,\n        PanelRow,\n        RadioControl,\n        RangeControl,\n        SelectControl,\n        TextControl,\n        ToggleControl,\n        CheckboxControl,\n        Button\n    } = wp.components;\n    const { i18n } = wp;\n    const { title, controls, onChange } = props;\n\n\n    const getImageButton = (openEvent, label) => {\n        return (\n            <div className=\"components-base-control\">\n                <Button \n                    onClick={ openEvent }\n                    className='button button-large'\n                >\n                    {label}\n                </Button>\n            </div>\n        );\n    };\n    let requiredFields;\n    return (\n        <div>\n            <InspectorControls>\n                <PanelBody\n                    title = {i18n.__(title)} \n                >\n                    <PanelRow>\n                        {controls.map((control) => {\n                            switch(control.type) {\n                                case 'radio': \n                                    requiredFields = ['label', 'value', 'options', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <RadioControl\n                                            label={ i18n.__( `${control.label}` ) }\n                                            selected={control.value}\n                                            options={ control.options } \n                                            onChange={(change) => onChange( control.reference, change)}\n                                        />\n                                    )\n                                case 'range':\n                                    requiredFields = ['label', 'value', 'reference', 'min', 'max'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <RangeControl\n                                            label={control.label}\n                                            value={control.value}\n                                            onChange={(change) => onChange(control.reference, change)}\n                                            min={control.min}\n                                            max={control.max}\n                                            initalPosition={control.min}\n                                        />\n                                    )\n                                case 'select':\n                                    requiredFields = ['label', 'value', 'options', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <SelectControl\n                                            label={ i18n.__( `${control.label}` ) }\n                                            value={control.value}\n                                            options={ control.options } \n                                            onChange={(change) => onChange( control.reference, change)}\n                                        />\n                                    )\n                                case 'text': \n                                    requiredFields = ['label', 'value', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <TextControl\n                                            label={ i18n.__( `${control.label}` ) }\n                                            value={ control.value }\n                                            onChange={(change) => onChange( control.reference, change)}\n                                        />   \n                                    )\n                                case 'toggle': \n                                    requiredFields = ['label', 'value', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <ToggleControl\n                                        label={ i18n.__( `${control.label}` ) }\n                                        checked={control.value}\n                                        onChange={(change) => onChange( control.reference, change)}\n                                        />\n                                    )\n                                case 'image': \n                                    requiredFields = ['label', 'image_id', 'id_reference', 'image_url', 'url_reference', 'image_alt', 'alt_reference' ];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <MediaUpload\n                                            onSelect={ media => { onChange(control.alt_reference, media.alt); onChange(control.id_reference, media.id.toString()); onChange(control.url_reference, media.url); } }\n                                            type=\"image\"\n                                            value={ control.image_id }\n                                            render={ ({ open }) => getImageButton(open, control.label ) }\n                                        />\n                                    )\n        \n                                case 'file': \n                                    requiredFields = ['label', 'id_value', 'id_reference', 'url_value', 'url_reference', 'name_value', 'name_reference' ];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <MediaUpload\n                                            onSelect={ file => { onChange(control.url_reference, file.url); onChange(control.id_reference, file.id); onChange(control.name_reference, file.filename); } }\n                                            type=\"image\"\n                                            value={ control.file_id }\n                                            render={ ({ open }) => getImageButton(open, control.label ) }\n                                        />\n\n                                        )\n                                case 'checkbox':\n                                    requiredFields = ['label', 'value', 'reference' ];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                    <CheckboxControl\n                                        label={ control.label }\n                                        checked={ control.value }\n                                        onChange={ (change) => onChange(control.reference, change ) }\n                                    />\n                                )\n                                default: \n                                return `Control type either not set or invalid for ${control.label}`;\n                            } \n                        })}\n                    </PanelRow>\n                </PanelBody>    \n            </InspectorControls>\n        </div>\n    )\n}","{/* \n\nABOUT\nCustom Image Upload is a custom component that extends the built in MediaUpload component for easier customization across the site. \n\nPROPS \n    components\n        An array of objects. Each object is a single Media Upload component with associated button with the following fields:\n        - buttonText : The text to be displayed on the upload Button\n        - value : The imageUrl for the specific image.\n        - reference : The name of the image url attribute on the parent component.\n        - altValue : A reference to the image url attribute on the parent component.\n        - reference : The name of the alt value attribute on the parent component.\n        - idValue : A reference to the image id attribute on the parent.\n        - reference : The name of the image id attribute on the parent component.\n        - imageClasses (optional) : An array of classes to be passed to the div containing the image. \n        - buttonClasses (optional) : An array of classes to be passed to the upload image button.\n\n    onChange\n        A function to update the attribute on the parent on changes in the child. \n        Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n    \n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\nEXAMPLE\n\n    <CustomImageUpload\n        components={[\n            {\n                value: imageUrl,\n                reference: 'imageUrl',\n                altValue: imageAlt,\n                altReference: 'imageAlt',\n                idValue: imageId,\n                idReference: 'imageId',\n                buttonText: 'Add an Icon',\n            },\n        ]}\n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    />\n\n*/}\n\nimport customErrors from '../helper-functions/custom-error';\n\nexport default function CustomImageUpload(props) {\n    const {\n        MediaUpload,\n        MediaUploadCheck\n    } = wp.blockEditor;\n    const {\n        Button\n    } = wp.components;\n    const {\n        Fragment\n    } = wp.element;\n    const { i18n } = wp;\n    const checkRequiredValues = (props) => {\n        const requiredFields = ['components', 'onChange'];\n        const values =  props;\n        values.type = 'Custom Image'\n        customErrors(values, requiredFields);\n    }\n    const checkRequiredImageAttributes = (props) => {\n        const requiredFields = ['reference', 'value', 'altValue', 'altReference', 'idReference', 'idValue', 'buttonText']\n        const values = props;\n        values.type = 'Custom Image';\n        customErrors(values, requiredFields);\n    }\n    checkRequiredValues(props);\n    const { components, onChange } = props;\n\n    const clearImage = () => {\n    \n}\n\n    const getImageButton = (openEvent, component) => {\n        if( component.value ) {\n            return (\n                <div>\n                    <div className={component.imageClasses && Array.isArray(component.imageClasses) ? component.imageClasses.join(' ') : 'image' } >\n                        <img \n                            src={ component.value }\n                            onClick={ openEvent }\n                            alt={component.altValue ? component.altValue : ''}\n                        />\n                    </div>\n                    <div className=\"button-container\">\n                        <Button \n                            onClick={ function() { onChange(component.altReference, ''); onChange(component.reference, ''); onChange(component.idReference, '');} }\n                            className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                        >\n                            { i18n.__('Remove Image') }\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"button-container\">\n                    <Button \n                        onClick={ openEvent }\n                        className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                    >\n                        { i18n.__(component.buttonText) }\n                    </Button>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <Fragment>\n            {\n                components.map((component) => {\n                    checkRequiredImageAttributes(component);\n                    return (\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={ media => { onChange(component.altReference, media.alt); onChange(component.reference, media.url); onChange(component.idReference, Number(media.id)); } }\n                                type=\"image\"\n                                value={ component.value }\n                                render={ ({ open }) => getImageButton(open, component) }\n                            />\n                        </MediaUploadCheck>\n                    )\n                })\n            }\n        </Fragment>\n    )\n}","import { namespace } from '../helper-functions/constants';\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function selectPostBlock(postObject) {\n    const { icon, slug, single, parent } = postObject;\n\tconst { registerBlockType } = wp.blocks;\n\tconst { withSelect } = wp.data;\n\tconst { SelectControl } = wp.components;\n\n\tconst MySelectControl = ({ post, setAttributes, ...props }) => (\n\t\t<SelectControl\n\t\t\tlabel=\"Select A Post: \"\n\t\t\tvalue={post ? post : 0}\n\t\t\toptions={props.options}\n\t\t\tonChange={(post) => {\n\t\t\t\tsetAttributes({ post: post });\n\t\t\t}}\n\t\t/>\n    );\n\n    const stringAttrs = ['post'];\n    const attributes = defaultAttrs(stringAttrs);\n\tregisterBlockType(`${namespace}/select-${slug}`, {\n\t\ttitle: `Select ${single}`,\n\t\tdescription: \"Allows user to select a post\",\n\t\ticon,\n\t\tcategory: \"common\",\n\t\tattributes,\n\t\tparent,\n\t\tedit: withSelect((select) => {\n\t\t\treturn {\n\t\t\t\tposts: select(\"core\").getEntityRecords(\"postType\", slug, {\n\t\t\t\t\tper_page: -1,\n\t\t\t\t}),\n\t\t\t};\n\t\t})(({ posts, attributes, setAttributes }) => {\n\t\t\tif (!posts) {\n\t\t\t\treturn (\n\t\t\t\t\t<div className={`custom-component`}>\n\t\t\t\t\t\t<p className=\"block-title\">{`Select ${single}`}</p>\n\t\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif (posts && posts.length === 0) {\n\t\t\t\treturn (\n\t\t\t\t\t<div className={`custom-component`}>\n\t\t\t\t\t\t<p className=\"block-title\">{`Select ${single}`}</p>\n\t\t\t\t\t\t<p>No Posts</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst options = posts.map((post) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: post.id,\n\t\t\t\t\tlabel: post.title.rendered,\n\t\t\t\t};\n      });\n      \n      options.unshift({ value: 0, label: \"Select\"});\n\n\t\t\treturn (\n\t\t\t\t<div className={`custom-component`}>\n\t\t\t\t\t<p className=\"block-title\">{`Select ${single}`}</p>\n\t\t\t\t\t<MySelectControl\n\t\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tpost={attributes.post}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}),\n\t\tsave: function ({ attributes }) {\n\t\t\tconst { post } = attributes;\n\t\t},\n\t});\n}","import { namespace } from \"../helper-functions/constants.js\";\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nimport BlockSettings from \"./block-custom-settings.jsx\";\n\nexport default function customRichTextBlock(blockObject) {\n    const { registerBlockType, createBlock } = wp.blocks;\n\tconst {\n        RichText,\n        AlignmentToolbar,\n        BlockControls,\n    } = wp.blockEditor;\n\n    const {\n        slug,\n        title,\n        description,\n        category,\n        classes,\n        icon,\n        tagName,\n        placeholder,\n    } = blockObject;\n    const settings = blockObject.settings && Array.isArray(blockObject.settings) ? blockObject.settings : ['core/italic', 'core/bold', 'core/link', 'core/code'];\n    const parent = blockObject.parent && Array.isArray(blockObject.parent) ? blockObject.parent : null; \n    const blockSettings = blockObject.blockSettings ? true : false; \n    let transforms = {};\n    if (blockObject.transforms && blockObject.transforms.length) {\n        transforms.to = [];\n        blockObject.transforms.forEach((block) => {\n            const transformObject = {\n                type: 'block',\n                blocks: [`${namespace}/${block}`],\n                transform: function (attributes, innerBlocks) {\n                    return createBlock(`${namespace}/${block}`, attributes, innerBlocks);\n                },\n            };\n            transforms.to.push(transformObject);\n        });\n    }\n    const stringAttrs = ['content'];\n    const attributes = defaultAttrs(stringAttrs);\n    attributes['content']['source'] = 'html';\n    attributes['content']['selector'] = tagName;\n    attributes['alignment'] = blockObject.alignment === false ? { type: 'Boolean', default: false } : { type: 'String', default: 'left' };\n    attributes['custom_settings'] = {\n        type: 'boolean',\n        default: blockSettings,\n    } \n    const { i18n } = wp;\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title),\n\t\tdescription: i18n.__(description),\n\t\tcategory,\n        icon,\n        parent,\n        attributes,\n        transforms,\n\t\tedit: (props, editor = false, save = false) => {\n        const { setAttributes, attributes } = props;\n\n        const { alignment, content, custom_settings } = attributes;\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n        }\n\n\t\t\treturn [\n                <div class={alignment ? `text-${alignment} custom-component` : 'custom-component' }>\n                    <p className=\"block-title\">{title}</p>\n                    {\n                        alignment ?          \n                        <BlockControls>\n                            <AlignmentToolbar\n                                value={ alignment }\n                                onChange={(change) => {\n                                    updateAttributeValue(\"alignment\", change);\n                                }}\n                            />\n                        </BlockControls> : null\n                    }\n        \n                    <RichText\n                        className={classes ?  classes : null}\n                        tagName={tagName}\n                        placeholder={placeholder }\n                        keepPlaceholderOnFocus={true}\n                        allowedFormats={ settings }\n                        value={content}\n                        onChange={(changes) => {\n                            updateAttributeValue(\"content\", changes);\n                        }}\n                    />\n\t\t\t\t</div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n            const { alignment, content, custom_settings } = attributes;\n            return (\n                <RichText.Content tagName={tagName} className={classes} value={ content } />\n            )\n        },\n    });\n}\n","{/* \n\nABOUT\nRichText component is a component to easily add a RichText WordPress component to any existing block. \n\nWARNING\nCurrently the Alignment Toolbar can only be added to the entire Block, not the individual RichText component, so if you enable the Alignment on more than one custom RichText element within a specific block it will show two alignment toolbars side-by-side. \n\nPROPS \n  Components\n    An array of objects. Each object is a single RichText component with the following fields. Can create multiple RichText components.\n      - tagName : The name of the HTML tag to be applied to this RichText component\n      - reference : The name of the attribute it controls\n      - value : The value of the attribute\n      - placeholder (optional) : Pass a string for the RichText placeholder. \n      - classes (optional) : Pass an array of classes to be applied to the component for styling.\n      - settings (optional): Pass an array of formatting settings to be enabled. Need to be namespaced (e.g. 'core/bold', 'core/italic', or 'core/link'). Will remove all settings if passed an empty array. Current custom options include: \n      - align (optional): An object to enable/disable the alignment toolbar and pass it settings. It has the following values. \n        -- value : A reference to the attribute in the parent block that controls alignment (only required if enabled is set to true)\n        -- reference : Name of the attribute in the parent block that controls alignment (only required if enabled is set to true)\n    \n      ** Any optional revert to a default if nothing is passed. \n\n  onChange\n    A function to update the attribute on the parent on changes in the child. \n    Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n      \n      onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\nEXAMPLE\n\n  <CustomRichText \n    onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    components={[\n      {\n        value: title,\n        reference: \"title\",\n        classes: ['custom-class'],\n        tagName: \"h2\",\n        settings: ['core/bold', 'core/link'],\n        align: {\n          value: alignment,\n          reference: 'alignment'\n        },\n      },\n      {\n        value: subtitle,\n        reference: \"subtitle\",\n        tagName: \"h3\",\n      }\n    ]}\n  />\n\n*/}\n\nimport customError from '../helper-functions/custom-error';\n\nexport default function CustomRichText(props) {\n  const {\n    RichText,\n    AlignmentToolbar,\n    BlockControls,\n  } = wp.blockEditor;\n  \n  const checkFields = (values, fields) => {\n    customError(values, fields);\n  }\n\n  const checkRequiredComponentFields = (values) => {\n    const requiredFields = [ 'value', 'tagName'];\n    values.type = 'RichText';\n    checkFields(values, requiredFields);\n  }\n\n  const checkRequiredProps = (props) => {\n    const requiredFields = [ 'onChange', 'components'];\n    const values = props;\n    values.type = 'RichText';\n    checkFields(values, requiredFields);\n  }\n\n  const checkAlignment = (align) => {\n    const alignmentRequiredFields = ['value', 'reference'];\n    align.type = 'RichText alignment';\n    checkFields(align, alignmentRequiredFields);\n  }\n\n  checkRequiredProps(props)\n\n  const { components, onChange } = props;\n\n  return (\n    <div>\n      {\n        components.map((component) => {\n          checkRequiredComponentFields(component);\n          if (component.align) {\n            checkAlignment(component.align);\n          }\n          return (\n            <div>\n            {\n              component.align ? \n                <BlockControls>\n                  <AlignmentToolbar\n                    value={ component.align.value }\n                    onChange={ (change) => { \n                      onChange(component.align.reference, change)\n                    } }\n                  />\n                </BlockControls> : null\n            }\n            <RichText\n              className={component.classes && component.classes.length > 0 ? `components-text-control__input ${component.classes.join(' ')}` : 'components-text-control__input'}\n              tagName={component.tagName}\n              style={ component.align ? { textAlign: component.align.value } : {} }\n              placeholder={component.placeholder ? component.placeholder : \"Start writing...\"}\n              keepPlaceholderOnFocus={true}\n              allowedFormats={ component.settings && Array.isArray(component.settings) ? component.settings : [ 'core/bold', 'core/underline', 'core/link' ] }\n              value={component.value}\n              onChange={(changes) => {\n                onChange(component.reference, changes);\n              }}\n            />\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}","{/* \n\nABOUT\nCustom Video Upload is a custom component that extends the built in MediaUpload component for easier customization across the site. \n\nPROPS \n    components\n        An array of objects. Each object is a single Media Upload component with associated button with the following fields:\n        - buttonText : The text to be displayed on the upload Button\n        - value : The videoUrl for the specific video.\n        - reference : The name of the video url attribute on the parent component.\n        - altValue : A reference to the video url attribute on the parent component.\n        - reference : The name of the alt value attribute on the parent component.\n        - idValue : A reference to the video id attribute on the parent.\n        - reference : The name of the video id attribute on the parent component.\n        - videoClasses (optional) : An array of classes to be passed to the div containing the video. \n        - buttonClasses (optional) : An array of classes to be passed to the upload video button.\n\n    onChange\n        A function to update the attribute on the parent on changes in the child. \n        Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n    \n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\nEXAMPLE\n\n    <CustomVideoUpload\n        components={[\n            {\n                value: videoUrl,\n                reference: 'videoUrl',\n                altValue: videoAlt,\n                altReference: 'videoAlt',\n                idValue: videoId,\n                idReference: 'videoId',\n                buttonText: 'Add an Icon',\n            },\n        ]}\n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    />\n\n*/}\n\nimport customErrors from '../helper-functions/custom-error';\n\nexport default function CustomVideoUpload(props) {\n    const {\n        MediaUpload,\n        MediaUploadCheck\n    } = wp.blockEditor;\n    const {\n        Button\n    } = wp.components;\n    const {\n        Fragment\n    } = wp.element;\n    const { i18n } = wp;\n    const checkRequiredValues = (props) => {\n        const requiredFields = ['components', 'onChange'];\n        const values =  props;\n        values.type = 'Custom Video'\n        customErrors(values, requiredFields);\n    }\n    const checkRequiredVideoAttributes = (props) => {\n        const requiredFields = ['reference', 'value', 'altValue', 'altReference', 'idReference', 'idValue', 'buttonText']\n        const values = props;\n        values.type = 'Custom Video';\n        customErrors(values, requiredFields);\n    }\n    checkRequiredValues(props);\n    const { components, onChange } = props;\n\n    const clearVideo = () => {\n    \n}\n\n    const getVideoButton = (openEvent, component) => {\n        if( component.value ) {\n            return (\n                <div>\n                    <div className={component.videoClasses && Array.isArray(component.videoClasses) ? component.videoClasses.join(' ') : 'video' } >\n                        <video\n                            onClick={ openEvent }\n                            alt={component.altValue ? component.altValue : ''}\n                        >\n                            <source src={ component.value } />\n                        </video>\n                            \n                            \n                \n                    </div>\n                    <div className=\"button-container\">\n                        <Button \n                            onClick={ function() { onChange(component.altReference, ''); onChange(component.reference, ''); onChange(component.idReference, 0);} }\n                            className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                        >\n                            { i18n.__('Remove Video') }\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"button-container\">\n                    <Button \n                        onClick={ openEvent }\n                        className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                    >\n                        { i18n.__(component.buttonText) }\n                    </Button>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <Fragment>\n            {\n                components.map((component) => {\n                    checkRequiredVideoAttributes(component);\n                    return (\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={ media => { onChange(component.altReference, media.alt); onChange(component.reference, media.url); onChange(component.idReference, Number(media.id)); } }\n                                type=\"video\"\n                                value={ component.value }\n                                render={ ({ open }) => getVideoButton(open, component) }\n                            />\n                        </MediaUploadCheck>\n                    )\n                })\n            }\n        </Fragment>\n    )\n}","import SelectPost from './select-post.jsx';\n\nexport default function SelectAuthors({ authors, updateAttributeValue }) {\n    const authorsArray = authors !== '' ? JSON.parse(authors) : [];\n\n    const setAuthors = (val) => {\n        if (val.label && authorsArray.filter((author) => author.label === val.label).length === 0) {\n            val.equal = false;\n            updateAttributeValue('authors', JSON.stringify([...authorsArray, val]));\n        }\n    }\n\n    const updateContribution = (e, index) => {\n        e.preventDefault();\n        const tempAuthors = authorsArray;\n        tempAuthors[index].equal = !tempAuthors[index].equal;\n        updateAttributeValue('authors', JSON.stringify(tempAuthors));\n    }\n\n    const removeAuthor = (e, index) => {\n        e.preventDefault(); \n        const tempAuthors = authorsArray;\n        tempAuthors.splice(index, 1);\n        updateAttributeValue('authors', JSON.stringify(tempAuthors));\n    }\n    return (\n        <div>\n        <h3>Current Authors</h3>\n        {\n            authorsArray.length > 0 &&\n            <ol style={{ padding: '16px'}}>\n                { authorsArray.map((author, index) => {\n                    return (\n                        <li style={{ fontWeight: 700, padding: '4px 0' }}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <span style={{ width: '33.33%'}}>{`${author.label}${author.equal ? '*' : ''}`}</span>\n                                <button style={{ fontWeight: 400, width: '33.33%', border: 0, padding: '8px 24px' }}onClick={(e) => updateContribution(e, index)}>{ author.equal ? 'Remove Equal Contribution' : 'Add equal contribution' }</button>\n                                <button style={{ background: '#F05C5C', width: '33.33%', border: 0, padding: '8px 24px', color: 'white'}} onClick={(e)=> removeAuthor(e, index)}>Remove Author</button>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ol>\n        }\n        <h3>Add an Author</h3>\n        <SelectPost \n            slug=\"author\"\n            setValues={setAuthors}\n            label=\"Select an Author\"\n        />\n    </div>\n    )\n}","export default function SelectPost({ slug, label = \"Select a Post\", setValues }) {\n\tconst { SelectControl } = wp.components;\n    const { useSelect } = wp.data;\n    const { posts } = useSelect((select) => {\n        return {\n\t\t\tposts: select( 'core' ).getEntityRecords( 'postType', slug, {\n                per_page: -1,\n            } ),\n\t\t};\n    })\n    let selectPosts = []\n    if (posts && posts.length > 0) {\n        selectPosts = posts.map((post) => {\n            return {\n                label: post.title.rendered,\n                value: post.id\n            }\n        })\n        selectPosts.sort((a,b) => { \n            if (a.label < b.label) { \n                return -1;\n            } \n            if (a.label > b.label) {\n                return 1;\n            }\n            return 0\n        })\n        selectPosts.push({ label: 'Select', value: 0})\n        \n    }\n    return (\n        <div>\n            {\n                posts && posts.length > 0 ?\n                <SelectControl\n                    label={label}\n                    value={ 0}\n                    options={selectPosts}\n                    onChange={(id) => {\n                        const post = selectPosts.find((post) => {  return post.value === Number(id) });\n                        setValues(post);\n                    }}\n                />\n                : \n                <p>No posts found</p>\n            }\n           \n        </div>\n    )\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function customSectionBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const blockSlug = \"custom-section-block\"; // slug for the block\n\tconst blockTitle = \"Custom Section\";\n\tconst blockDescription = \"Component to create custom section block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"welcome-add-page\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-section custom-section__block\">\n                    <p className=\"block-title\">Custom Section Block</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"h2\",\n                                settings: ['core/bold', 'core/link', 'core/italic', 'core/code'],\n                                placeholder: \"Please provide a title\"\n                            },\n                        ]}\n                    />\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[\n                                `${namespace}/custom-subsection-block`, \n                                `core/code`, \n                                `core/table`, \n                                `core/podcast`, \n                                `core/video`, \n                                `core/list`, \n                                `core/quote`,\n                                `${namespace}/tag-cloud-container-block`, \n                                `${namespace}/paragraph`, \n                                `${namespace}/heading-two`, \n                                `${namespace}/heading-three`, \n                                `${namespace}/heading-four`, \n                                `${namespace}/custom-image`,\n                                `${namespace}/blockquote`,\n                                `${namespace}/publications-container`,\n                                `${namespace}/image-text`,\n                                `${namespace}/icon-list-container-block`\n                            ]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function customSubsectionBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const { i18n } = wp;\n    const {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n\n    const blockSlug = \"custom-subsection-block\"; // slug for the block\n\tconst blockTitle = \"Custom Subsection\";\n\tconst blockDescription = \"Component to create custom subsection block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"admin-page\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n        parent: [`${namespace}/custom-section-block`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-subsection custom-subsection__block\">\n                    <p className=\"block-title\">Custom Subsection Block</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                label: 'Title',\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"h3\",\n                                settings: ['core/bold', 'core/link', 'core/italic', 'core/code'],\n                                placeholder: \"Please provide a title\"\n                            },\n                        ]}\n                    />\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[\n                                `core/code`, \n                                `core/table`, \n                                `core/podcast`, \n                                `core/video`, \n                                `core/list`, \n                                `core/quote`,\n                                `${namespace}/tag-cloud-container-block`, \n                                `${namespace}/paragraph`, \n                                `${namespace}/heading-two`, \n                                `${namespace}/heading-three`, \n                                `${namespace}/heading-four`, \n                                `${namespace}/custom-image`,\n                                `${namespace}/blockquote`,\n                                `${namespace}/publications-container`,\n                                `${namespace}/image-text`,\n                                `${namespace}/icon-list-container-block`\n                            ]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n} ","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function pgNewsSlideBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"news-slide\";\n\tconst blockTitle = \"News Slide\";\n\tconst blockDescription = \"Creates a slide for an external news source.\";\n\tconst blockCategory = \"carousels\";\n    const blockIcon = \"external\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'link',\n        'title',\n        'source'\n    ];\n    const attributes = defaultAttrs(stringAttrs);\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n        parent: [`${namespace}/carousel`],\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { link, title, source } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container` }>\n                    <p className=\"block-title\">News Slide</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h3',\n                                classes: ['h3'],\n                                settings: [],\n                                placeholder: 'Provide the title for the news item (required)',\n                            },\n                            {\n                                reference: 'link',\n                                value: link,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                settings: [],\n                                placeholder: 'Provide a link to the news item (required)',\n                            },\n                            {\n                                reference: 'source',\n                                value: source,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                settings: [],\n                                placeholder: 'Provide the name for the news source (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { link, title, source } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function pgCarouselBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"carousel\";\n\tconst blockTitle = \"News Carousel\";\n\tconst blockDescription = \"Creates a carousel.\";\n\tconst blockCategory = \"carousels\";\n    const blockIcon = \"slides\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'link',\n        'title'\n    ];\n    const attributes = defaultAttrs(stringAttrs);\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { link, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container` }>\n                    <p className=\"block-title\">Media - Slider</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['h2'],\n                                settings: [],\n                                placeholder: 'Provide a Carousel title (optional)',\n                            },\n                            {\n                                reference: 'link',\n                                value: link,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                settings: [],\n                                placeholder: 'Provide a Carousel View All link (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    {save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/select-research-blogs`, `${namespace}/select-news`, `${namespace}/news-slide`]}\n                        />\n                    )}\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { link, title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function trmcStatsColumnBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"stat-column\";\n\tconst blockTitle = \"Statistic\";\n\tconst blockDescription = \"Creates a single statistic.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"layout\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        statistic: {\n            type: 'String',\n            default: '',\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n        parent: [`${namespace}/stats-container`],\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { description, statistic } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Statistic</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'statistic',\n                                value: statistic,\n                                tagName: 'h3',\n                                classes: ['heading_two'],\n                                placeholder: 'Add statistic',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { description, statistic} = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function trmcStatsContainerBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"stats-container\";\n\tconst blockTitle = \"Stat Call Out\";\n\tconst blockDescription = \"Creates a container for single statistics.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"chart-bar\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { description, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className=\"custom-container\">\n                    <p className=\"block-title\">Stat Call Out</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading_one'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className={`col--3`}>\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/stat-column`]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { description, title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function tabbedContentContainerBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const blockSlug = \"tabbed-content-container-block\"; // slug for the block\n\tconst blockTitle = \"Tabbed content container block\";\n\tconst blockDescription = \"Component to create tabbed content container block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"block-default\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        copy: {\n            type: 'String',\n            default: '',\n        }\n\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title, copy } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"tabbed-content-container__block\">\n                    <p class=\"block-title\">Tabbed Content Container</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title (optional)\"\n                            },\n                        ]}\n                    />\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: copy,\n                                reference: \"copy\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide copy (optional)\"\n                            },\n                        ]}\n                    />\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/tabbed-content-panel-block`]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title, copy } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n} ","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function tabbedContentPanelBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const { i18n } = wp;\n\n    const blockSlug = \"tabbed-content-panel-block\"; // slug for the block\n\tconst blockTitle = \"Tabbed content panel block\";\n\tconst blockDescription = \"Component to create tabbed content panel block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"columns\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        content: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n        parent: [`${namespace}/tabbed-content-container-block`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title, content } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"tabbed-content-panel__block\">\n                    <p class=\"block-title\">Tabbed Content Panel</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title\"\n                            },\n                        ]}\n                    />\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: content,\n                                reference: \"content\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide content\"\n                            },\n                        ]}\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title, content } = attributes;\n\t\t},\n\t});\n}  ","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function tagCloudContainerBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const blockSlug = \"tag-cloud-container-block\"; // slug for the block\n\tconst blockTitle = \"Tag cloud container block\";\n\tconst blockDescription = \"Component to create tag cloud container block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"block-default\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"tag-cloud-container__block custom-container\">\n                    <p class=\"block-title\">Tag Cloud Container</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title (optional)\",\n                                settings: []\n                            },\n                        ]}\n                    />\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/tag-cloud-item-block`]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}  ","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function tagCloudItemBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const { i18n } = wp;\n\n    const blockSlug = \"tag-cloud-item-block\"; // slug for the block\n\tconst blockTitle = \"Tag cloud item block\";\n\tconst blockDescription = \"Component to create tag cloud item block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"columns\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        text: {\n            type: 'String',\n            default: '',\n        },\n        link: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n        parent: [`${namespace}/tag-cloud-container-block`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { text, link } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"tag-cloud-item__block custom-child\">\n                    <p class=\"block-title\">Tag Cloud Item</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: text,\n                                reference: \"text\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title\",\n                                settings: []\n                            },\n                        ]}\n                    />\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: link,\n                                reference: \"link\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a link\",\n                                settings: []\n                            },\n                        ]}\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { text, link } = attributes;\n\t\t},\n\t});\n}   ","// Helpers\nimport { namespace } from './helper-functions/constants';\nimport defaultAttrs from './helper-functions/default-attrs';\n\nimport CustomRichText from \"./reusable/custom-richtext-component.jsx\";\n\nexport default function textColumnBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"text-2up\";\n\tconst blockTitle = \"Text 2-up\";\n\tconst blockDescription = \"Two columns with headline on left and copy on the right.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"table-col-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttributes = [ 'title' ];\n    const attributes = defaultAttrs(stringAttributes);\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div>\n                    <div className={`row`}>\n                        <div className=\"col-md-6\">\n                            <CustomRichText \n                                components={[\n                                    {\n                                        value: title,\n                                        reference: 'title',\n                                        tagName: 'h2',\n                                        placeholder: 'Start writing title...',\n                                        classes: ['heading-one'],\n                                    }\n                                ]}\n                                onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                            />\n                        </div>\n                        <div className=\"col-md-6\">\n                            {save ? (\n                                <InnerBlocks.Content />\n                            ) : (\n                                <InnerBlocks\n                                    template={[['core/paragraph']]}\n                                    allowedBlocks={['core/paragraph', 'core/button']}\n                            />\n                            )}\n                        </div> \n                    </div>\t\t\n                </div>,\n            ];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import customButtonIcons from './blocks/core-extends/button-icons';\nimport customVideoPoster from './blocks/core-extends/video-embed-poster.jsx';\nimport registerRichTextBlocks from \"./blocks/copy/copy-blocks.jsx\";\n\n// Meta\nimport pageMetaBlock from \"./blocks/meta/page-meta.jsx\"\nimport researchBlogMetaBlock from \"./blocks/meta/research-blogs-meta.jsx\";\nimport newsMetaBlock from \"./blocks/meta/news-meta.jsx\"\nimport teamMemberMetaBlock from \"./blocks/meta/team-member-meta.jsx\";\nimport authorMetaBlock from './blocks/meta/author-meta.jsx';\nimport publicationMetaBlock from './blocks/meta/publications-meta.jsx';\n\nimport textColumnBlock from \"../js/blocks/text-column.jsx\";\nimport imageTextBlock from \"./blocks/image-text.jsx\";\n\n// Page Strips\nimport imageBlock from \"./blocks/image-block.jsx\";\n\n// Accordion Blocks\nimport accordionContainerBlock from \"./blocks/accordion/accordion.jsx\";\nimport accordionRowBlock from \"./blocks/accordion/accordion-row.jsx\";\n\n// Block Quote\nimport blockquoteBlock from './blocks/blockquote/blockquote.jsx';\n\n// Body Copy\nimport bodyCopyBlock from \"./blocks/body-copy.jsx\";\n\n// Callout Columns\nimport calloutContainerBlock from \"./blocks/callouts/callout-container.jsx\";\nimport calloutColumnBlock from \"./blocks/callouts/callout-column.jsx\";\n\n// Content Columns\nimport contentCardContainerBlock from \"./blocks/content-cards/content-card-container.jsx\";\nimport contentCardBlock from \"./blocks/content-cards/content-card.jsx\";\n\n// Image List Blocks\nimport imageListContainerBlock from \"./blocks/image-list/image-list-container.jsx\";\nimport imageListBlock from \"./blocks/image-list/image-list-block.jsx\";\n\n// Logo Blocks\nimport logosContainer from \"./blocks/logos/logo-container.jsx\";\nimport logoBlock from \"./blocks/logos/logo.jsx\";\n\n// Page Strips\nimport pageStripBlock from \"./blocks/page-strips/page-strip.jsx\";\nimport pageStripGraphic from \"./blocks/page-strips/page-strip-graphic.jsx\";\nimport pageStripGraphicContainer from \"./blocks/page-strips/page-strip-graphic-container.jsx\";\n\n// Publications\nimport publicationsContainerBlock from './blocks/publications/publications-container.jsx';\nimport selectPostsBlocks from './blocks/publications/select-posts-blocks.jsx';\nimport bibtexBlock from './blocks/publications/bibtex-block.jsx';\n\n// Posts\nimport featuredPostsContainerBlock from './blocks/posts/featured-posts-container.jsx';\n\n// Slider Blocks\nimport sliderBlock from \"./blocks/slider/slider-container.jsx\";\nimport newsSlideBlock from './blocks/slider/news-slide.jsx';\n\n// Stat Blocks\nimport stateContainerBlock from \"./blocks/stats/stats-container.jsx\";\nimport statColumnBlock from \"./blocks/stats/stats-column.jsx\";\n\n// Greenhouse Blocks\nimport jobBlock from \"./blocks/greenhouse/jobs-block.jsx\";\n\n// Sidebar Table Of Contents Blocks\nimport customSectionBlock from './blocks/sidebar-table-of-contents/custom-section-blok.jsx';\nimport customSubsectionBlock from './blocks/sidebar-table-of-contents/custom-subsection-blok.jsx';\n\n// Icon List Contents Blocks\nimport iconListContainerBlock from './blocks/icon-list/icon-list-container-block.jsx';\nimport iconListItemBlock from './blocks/icon-list/icon-list-item-block.jsx';\n\n// Tabbed Content Blocks\nimport tabbedContentContainerBlock from \"./blocks/tabbed-content/tabbed-content-container.jsx\";\nimport tabbedContentPanelBlock from \"./blocks/tabbed-content/tabbed-content-panel.jsx\";\n\n// Tag Cloud Content Blocks\nimport tagCloudContainerBlock from \"./blocks/tag-cloud/tag-cloud-container-block.jsx\";\nimport tagCloudItemBlock from \"./blocks/tag-cloud/tag-cloud-item-block.jsx\";\n\n// Core Extends Blocks\ncustomVideoPoster();\nregisterRichTextBlocks();\n\n// Init meta blocks\npageMetaBlock();\nresearchBlogMetaBlock();\nnewsMetaBlock();\nteamMemberMetaBlock();\nauthorMetaBlock();\npublicationMetaBlock();\n\n// Init blocks here\ntextColumnBlock(); \nimageTextBlock();\n\n// Page Strips\npageStripBlock();\nimageBlock();\npageStripGraphic();\npageStripGraphicContainer();\n\n// Accordion Blocks\naccordionContainerBlock();\naccordionRowBlock();\n\n// Block Quote\nblockquoteBlock();\n\n// Body Copy\nbodyCopyBlock();\n\n// Callout Columns\ncalloutContainerBlock();\ncalloutColumnBlock();\n\n// Content Cards\ncontentCardContainerBlock();\ncontentCardBlock();\n\n// Image List Blocks\nimageListContainerBlock();\nimageListBlock();\n\n// Logo Blocks\nlogosContainer();\nlogoBlock();\n\n// Publications\npublicationsContainerBlock();\nselectPostsBlocks();\nbibtexBlock();\n\n// Posts\nfeaturedPostsContainerBlock();\n\n// Slide Blocks\nsliderBlock();\nnewsSlideBlock();\n\n\n// Stat Blocks\nstateContainerBlock();\nstatColumnBlock();\n\n// Greenhouse Blocks\njobBlock();\n\n// Sidebar Table Of Contents Blocks\ncustomSectionBlock();\ncustomSubsectionBlock();\n\n// Icon List Blocks\niconListContainerBlock();\niconListItemBlock();\n\n// Tabbed Content Blocks\ntabbedContentContainerBlock();\ntabbedContentPanelBlock();\n\n// Tag Cloud Content Blocks\ntagCloudContainerBlock();\ntagCloudItemBlock();"],"names":["namespace","CustomErrors","fields","values","compileErrors","Object","keys","length","constructor","errorFields","filter","value","undefined","Error","type","verifyInputs","join","DefaultAttrs","source","attributes","Array","isArray","forEach","field","default","CustomRichText","defaultAttrs","accordionBlock","registerBlockType","wp","blocks","InnerBlocks","blockEditor","i18n","blockSlug","blockTitle","blockDescription","blockCategory","blockIcon","stringAttrs","title","__","description","category","icon","parent","edit","props","editor","save","setAttributes","updateAttributeValue","attribute","reference","tagName","settings","classes","placeholder","change","BlockSettings","anchor_id","bg_color","label","options","CustomImageUpload","blockquoteBlock","style","image_alt","image_url","image_id","name","role","quote","speaker","styles","altValue","altReference","idValue","idReference","buttonText","bodyCopyBlock","imageTextBlock","createBlock","slug","link","link_text","imageClasses","reverse","trmcAccordionBlock","columns","trmcContentContainerBlock","link_href","customRichTextBlock","transforms","registerBodyCopyBlocks","block","addFilter","hooks","Fragment","element","extendCoreVideo","createHigherOrderComponent","compose","InspectorControls","MediaUpload","components","PanelBody","Button","TextControl","customAttributes","caption","getImageButton","openEvent","withInspectorControls","BlockEdit","media","alt","url","id","toString","open","jobBlock","emptyState","iconListContainerBlock","ToggleControl","iconListItemBlock","subtitle","copy","imageBlock","listImageBlock","listImageContainerBlock","stringAttributes","trmcLogoContainerBlock","logoBlock","authorMetaBlock","meta_fields","supports","multiple","external_link","SelectAuthors","researchBlogMetaBlock","authors","publication_date","time_to_read","CustomVideoUpload","pageMetaBlock","TextareaControl","RadioControl","SelectControl","Inserter","className","headline","publicationMetaBlock","abstract","blog","citation","citation_link","code","paper","leadershipMetaBlock","position","education","pageStripGraphicContainer","useSelect","data","limit","innerBlockCount","select","getBlock","clientId","innerBlocks","trmcPageStripGraphicBlock","btn_url","btn_text","image_id_mobile","image_alt_mobile","image_url_mobile","to","transform","pageStripBlock","featuredPostsContainerBlock","bibtexBlock","entry","publicationsContainerBlock","selectPostBlock","selectPostsBlocks","selectBlocks","single","customErrors","PanelRow","RangeControl","CheckboxControl","controls","onChange","requiredFields","map","control","min","max","alt_reference","id_reference","url_reference","file","name_reference","filename","file_id","MediaUploadCheck","checkRequiredValues","checkRequiredImageAttributes","clearImage","component","buttonClasses","Number","postObject","withSelect","MySelectControl","post","posts","getEntityRecords","per_page","rendered","unshift","blockObject","RichText","AlignmentToolbar","BlockControls","blockSettings","transformObject","push","alignment","content","custom_settings","changes","customError","checkFields","checkRequiredComponentFields","checkRequiredProps","checkAlignment","align","alignmentRequiredFields","textAlign","checkRequiredVideoAttributes","clearVideo","getVideoButton","videoClasses","SelectPost","authorsArray","JSON","parse","setAuthors","val","author","equal","stringify","updateContribution","e","index","preventDefault","tempAuthors","removeAuthor","splice","padding","fontWeight","display","justifyContent","width","border","background","color","setValues","selectPosts","sort","a","b","find","customSectionBlock","customSubsectionBlock","pgNewsSlideBlock","pgCarouselBlock","trmcStatsColumnBlock","statistic","trmcStatsContainerBlock","tabbedContentContainerBlock","tabbedContentPanelBlock","tagCloudContainerBlock","tagCloudItemBlock","text","textColumnBlock","customVideoPoster","registerRichTextBlocks","newsMetaBlock","teamMemberMetaBlock","accordionContainerBlock","accordionRowBlock","calloutContainerBlock","calloutColumnBlock","contentCardContainerBlock","contentCardBlock","imageListContainerBlock","imageListBlock","logosContainer","pageStripGraphic","sliderBlock","newsSlideBlock","stateContainerBlock","statColumnBlock"],"sourceRoot":""}