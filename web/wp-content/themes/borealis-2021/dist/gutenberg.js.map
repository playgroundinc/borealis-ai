{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/blocks/accordion/accordion-row.jsx","webpack:///./src/js/blocks/accordion/accordion.jsx","webpack:///./src/js/blocks/body-copy.jsx","webpack:///./src/js/blocks/callouts/callout-column.jsx","webpack:///./src/js/blocks/callouts/callout-container.jsx","webpack:///./src/js/blocks/content-cards/content-card-container.jsx","webpack:///./src/js/blocks/content-cards/content-card.jsx","webpack:///./src/js/blocks/core-extends/video-embed-poster.jsx","webpack:///./src/js/blocks/greenhouse/jobs-block.jsx","webpack:///./src/js/blocks/helper-functions/Locations.js","webpack:///./src/js/blocks/helper-functions/constants.js","webpack:///./src/js/blocks/helper-functions/custom-error.js","webpack:///./src/js/blocks/helper-functions/default-attrs.js","webpack:///./src/js/blocks/helper-functions/provinces.js","webpack:///./src/js/blocks/helper-functions/us-states.js","webpack:///./src/js/blocks/image-block.jsx","webpack:///./src/js/blocks/image-list/image-list-block.jsx","webpack:///./src/js/blocks/image-list/image-list-container.jsx","webpack:///./src/js/blocks/image-text.jsx","webpack:///./src/js/blocks/logos/logo-container.jsx","webpack:///./src/js/blocks/logos/logo.jsx","webpack:///./src/js/blocks/meta/leadership-meta.jsx","webpack:///./src/js/blocks/meta/location-meta.jsx","webpack:///./src/js/blocks/meta/news-meta.jsx","webpack:///./src/js/blocks/meta/news-releases-meta.jsx","webpack:///./src/js/blocks/meta/page-meta.jsx","webpack:///./src/js/blocks/meta/research-blogs-meta.jsx","webpack:///./src/js/blocks/page-strips/page-strip-graphic.jsx","webpack:///./src/js/blocks/page-strips/page-strip.jsx","webpack:///./src/js/blocks/reusable/block-custom-settings.jsx","webpack:///./src/js/blocks/reusable/custom-image-upload.jsx","webpack:///./src/js/blocks/reusable/custom-richtext-component.jsx","webpack:///./src/js/blocks/reusable/custom-video-upload.jsx","webpack:///./src/js/blocks/sidebar-table-of-contents/custom-section-blok.jsx","webpack:///./src/js/blocks/sidebar-table-of-contents/custom-subsection-blok.jsx","webpack:///./src/js/blocks/slider/image-slide.jsx","webpack:///./src/js/blocks/slider/slider-container.jsx","webpack:///./src/js/blocks/stats/stats-column.jsx","webpack:///./src/js/blocks/stats/stats-container.jsx","webpack:///./src/js/blocks/text-column.jsx","webpack:///./src/js/gutenberg.js"],"names":["accordionBlock","registerBlockType","wp","blocks","InnerBlocks","blockEditor","i18n","blockSlug","blockTitle","blockDescription","blockCategory","blockIcon","stringAttrs","attributes","defaultAttrs","namespace","title","__","description","category","icon","parent","edit","props","editor","save","setAttributes","updateAttributeValue","attribute","value","reference","tagName","settings","classes","placeholder","change","anchor_id","bg_color","type","label","options","bodyCopyBlock","imageTextBlock","createBlock","slug","image_alt","default","image_id","image_url","link","link_text","altValue","altReference","idValue","idReference","buttonText","imageClasses","reverse","trmcAccordionBlock","columns","trmcContentContainerBlock","link_href","addFilter","hooks","Fragment","element","extendCoreVideo","createHigherOrderComponent","compose","InspectorControls","MediaUpload","components","PanelBody","Button","TextControl","customAttributes","name","caption","getImageButton","openEvent","withInspectorControls","BlockEdit","media","alt","url","id","toString","open","jobBlock","emptyState","Location","constructor","states","usStates","provinces","getProvinces","province","option","push","getStates","state","CustomErrors","fields","values","compileErrors","Object","keys","length","errorFields","filter","undefined","Error","verifyInputs","join","DefaultAttrs","source","Array","isArray","forEach","field","AB","BC","MB","NB","NL","NT","NS","NU","ON","PE","QC","SK","YT","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","imageBlock","listImageBlock","listImageContainerBlock","stringAttributes","trmcLogoContainerBlock","logoBlock","leadershipMetaBlock","Inserter","meta_fields","supports","multiple","position","education","excerpt","copy","locationMetaBlock","TextareaControl","RadioControl","SelectControl","LocationsClass","unshift","location_country","location_address","location_city","location_province","location_code","location_lat","location_lng","location_phone","location_fax","location_hours","error","setLatLng","coordinates","apiCall","fetch","method","redirect","referrer","resp","json","data","locations","features","geometry","buildUrl","address","encodedAddress","encodeURI","country","ajaxInfo","apiKey","verifyAddress","fetchLatLng","fontSize","paddingTop","fontStyle","textAlign","newsMetaBlock","publication_date","source_publication","authors","external_link","news_release_date","pageMetaBlock","ToggleControl","className","gradient_background","hero_style","hero_background_color","headline","hero_cta_one_link","hero_cta_one_text","hero_cta_two_link","hero_cta_two_text","hero_video_url","hero_video_id","hero_video_alt","researchBlogMetaBlock","post_info","console","log","trmcPageStripGraphicBlock","transforms","to","transform","innerBlocks","id_reference","url_reference","alt_reference","backgroundImage","backgroundSize","backgroundPosition","pageStripBlock","BlockSettings","PanelRow","RangeControl","CheckboxControl","controls","onChange","requiredFields","map","control","customErrors","min","max","file","name_reference","filename","file_id","CustomImageUpload","MediaUploadCheck","checkRequiredValues","checkRequiredImageAttributes","clearImage","component","buttonClasses","Number","CustomRichText","RichText","AlignmentToolbar","BlockControls","checkFields","customError","checkRequiredComponentFields","checkRequiredProps","checkAlignment","align","alignmentRequiredFields","changes","CustomVideoUpload","checkRequiredVideoAttributes","clearVideo","getVideoButton","videoClasses","customSectionBlock","customSubsectionBlock","trmcImageSlideBlock","trmcSliderBlock","alignment","trmcStatsColumnBlock","statistic","trmcStatsContainerBlock","textColumnBlock","customVideoPoster","newsReleaseMetaBlock","pageStripGraphic","accordionContainerBlock","accordionRowBlock","calloutContainerBlock","calloutColumnBlock","contentCardContainerBlock","contentCardBlock","imageListContainerBlock","imageListBlock","logosContainer","sliderBlock","imageSlideBlock","stateContainerBlock","statColumnBlock"],"mappings":"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","file":"gutenberg.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/gutenberg.js\");\n","import {namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function accordionBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"accordion-row\";\n\tconst blockTitle = \"Accordion Row\";\n\tconst blockDescription = \"Creates a single expandable accordion item.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"table-row-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = ['title'];\n    const attributes = defaultAttrs(stringAttrs);\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n        parent: [`${namespace}/accordion`],\n\t\tedit: (props, editor = false, save = false ) => {\n            const { setAttributes, attributes } = props;\n            const { title } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n                setAttributes({ [attribute]: value });\n            }\n\n            return [\n                <div className={`custom-child ${ editor ? \"accordion-editory\" : \"accordion--fe\" }` }>\n                    <p className=\"block-title\">Accordion Row</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'p',\n                                settings: [],\n                                classes: ['heading-four'],\n                                placeholder: 'Accordion row title here',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    {save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/paragraph-no-alignment`, `${namespace}/document-row`, `${namespace}/heading-four`]}\n                        />\n                    )}\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function accordionBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"accordion\";\n\tconst blockTitle = \"Accordion\";\n\tconst blockDescription = \"Creates a set of expandable items.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"feedback\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'anchor_id',\n        'description',\n        'title',\n        'bg_color'\n    ];\n    const attributes = defaultAttrs(stringAttrs);\n    attributes['bg_color']['default'] = 'white';\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { anchor_id, bg_color, description, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container block--${bg_color} }` }>\n                    <p className=\"block-title\">Accordion</p>\n                    <BlockSettings \n                        controls={[\n                            {\n                                type: 'select',\n                                label: 'Background color',\n                                reference: 'bg_color',\n                                value: bg_color,\n                                options: [\n                                    { value: 'white', label: 'White' },\n                                    { value: 'grey', label: 'Grey' }\n                                ]\n                            },   \n                            {\n                                type: 'text',\n                                label: 'Anchor',\n                                reference: 'anchor_id',\n                                value: anchor_id,\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading_two'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    {save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/accordion-row`]}\n                        />\n                    )}\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// Helpers\nimport { namespace } from './helper-functions/constants';\n\nexport default function bodyCopyBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"body-copy\";\n\tconst blockTitle = \"Body Copy\";\n\tconst blockDescription = \"Component to add copy to a page.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"editor-bold\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes: {\n        },\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-container\">\n                    <p class=\"block-title\">Body Copy</p>\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/heading-two`, `${namespace}/heading-three`, `${namespace}/heading-four`, `${namespace}/heading-five`, `${namespace}/paragraph`, 'core/list', `${namespace}/body-copy-carousel`, `${namespace}/body-copy-image`]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\n\nexport default function imageTextBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Custom Column\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"callout-column\";\n\tconst title = \"Card\";\n\tconst description = \"A single card.\";\n\tconst category = \"common\";\n    const icon = \"table-col-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        image_alt: {\n            type: \"String\",\n            default: \"\",\n        },\n        image_id: {\n            type: \"Number\",\n            default: 0,\n        },\n        image_url: {\n            type: \"String\",\n            default: \"\",\n        },\n        link: {\n            type: \"String\",\n            default: \"\",\n        },\n        link_text: {\n            type: \"String\",\n            default: \"read more\",\n        },\n        title: {\n            type: \"String\",\n            default: \"\",\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n        parent: [`${namespace}/callout-container`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                image_alt, \n                image_id, \n                image_url, \n                link, \n                link_text,\n                title\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Card</p>\n                    <section>\n                        <CustomImageUpload\n                            components={[\n                                {\n                                    value: image_url,\n                                    reference: 'image_url',\n                                    altValue: image_alt,\n                                    altReference: 'image_alt',\n                                    idValue: image_id,\n                                    idReference: 'image_id',\n                                    buttonText: 'Add Image',\n                                    imageClasses: ['image-text__image']\n                                }\n                            ]}\n                            onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                        />\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: title,\n                                    reference: 'title',\n                                    tagName: 'h2',\n                                    classes: ['heading-one'],\n                                    placeholder: \"Add a title for this card\"\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks allowedBlocks={[]} />\n                        )}\n                            <CustomRichText \n                                components={[\n                                    {\n                                        value: link,\n                                        reference: 'link',\n                                        tagName: 'p',\n                                        placeholder: \"Add a link for this card\",\n                                        classes: [],\n                                    },\n                                    {\n                                        value: link_text,\n                                        reference: 'link_text',\n                                        placeholder: \"Add link text for this card\",\n                                        tagName: 'p',\n                                        classes: [],\n                                    },\n                                ]}\n                                onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                            />\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nexport default function trmcAccordionBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"callout-container\";\n\tconst blockTitle = \"Cards - Image\";\n\tconst blockDescription = \"Creates a container for single callout cards.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"layout\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'alignment',\n        'columns',\n        'title',\n    ];\n    const attributes = {\n        columns: {\n            type: 'String',\n            default: '3',\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { description, columns, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className=\"custom-container\">\n                    <p className=\"block-title\">Cards - Image (set number of columns in block settings)</p>\n                    <BlockSettings \n                        controls={[   \n                            {\n                                type: 'select',\n                                label: '# of Columns',\n                                reference: 'columns',\n                                value: columns,\n                                options: [\n                                    // Value is the 12 / number of columns.\n                                    { label: \"Four\", value: \"3\" },\n                                    { label: \"Three\", value: \"4\" },\n                                    { label: \"Two\", value: \"6\" }\n                                ]\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading-two'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className={`col--${columns}`}>\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/callout-column`]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { columns, description, title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nexport default function trmcContentContainerBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"content-card-container\";\n\tconst blockTitle = \"Content Block - Cards\";\n\tconst blockDescription = \"Creates a container for content cards.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"layout\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n    const attributes = {\n        bg_color: {\n            type: 'String',\n            default: 'white'\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n        icon: {\n            type: 'Boolean',\n            default: true,\n        },\n        link: {\n            type: 'String',\n            default: ''\n        },\n        link_text: {\n            type: 'String',\n            default: 'Learn More'\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { bg_color, description, icon, link, link_text, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container block--${bg_color}`}>\n                    <p className=\"block-title\">Content Block - Cards (set background color and whether or not to use icons in the settings)</p>\n                    <BlockSettings\n                        title=\"Block Settings\"\n                        controls={[\n                            {\n                                type: 'select',\n                                label: 'Background Color',\n                                reference: 'bg_color',\n                                value: bg_color,\n                                options: [\n                                    { value: 'white', label: 'White' },\n                                    { value: 'grey', label: 'Grey' },\n                                    { value: 'black', label: 'Black' },\n                                    { value: 'red', label: 'Dark Red' },\n                                ]\n                            },\n                            {\n                                type: 'toggle',\n                                label: 'Card Icons',\n                                reference: 'icon',\n                                value: icon,\n                            },\n                        ]}\n                        onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading-two'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            },\n                            {\n                                reference: 'link',\n                                value: link,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add cta link (optional)',\n                            },\n                            {\n                                reference: 'link_text',\n                                value: link_text,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add cta link text (optional)',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className={icon ? `col--4` : `col--4 no-icon`}>\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/content-card`]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { columns, description, title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\n\nexport default function imageTextBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Custom Column\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"content-card\";\n\tconst title = \"Card\";\n\tconst description = \"A single content card.\";\n\tconst category = \"common\";\n    const icon = \"table-col-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        image_alt: {\n            type: \"String\",\n            default: \"\",\n        },\n        image_id: {\n            type: \"Number\",\n            default: 0,\n        },\n        image_url: {\n            type: \"String\",\n            default: \"\",\n        },\n        link_text: {\n            type: 'String',\n            default: '',\n        },\n        link_href: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: \"String\",\n            default: \"\",\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n        parent: [`${namespace}/content-card-container`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                image_alt, \n                image_id, \n                image_url, \n                title,\n                link_text,\n                link_href\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Card</p>\n                    <section>\n                        <div className=\"icon-upload\">\n                            <CustomImageUpload\n                                components={[\n                                    {\n                                        value: image_url,\n                                        reference: 'image_url',\n                                        altValue: image_alt,\n                                        altReference: 'image_alt',\n                                        idValue: image_id,\n                                        idReference: 'image_id',\n                                        buttonText: 'Add Icon',\n                                        imageClasses: ['image-text__image']\n                                    }\n                                ]}\n                                onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                            />\n                        </div>\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: title,\n                                    reference: 'title',\n                                    tagName: 'h2',\n                                    classes: ['heading-one'],\n                                    placeholder: \"Add a title for this card\"\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks allowedBlocks={[`${namespace}/paragraph-no-alignment`]} />\n                        )}\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: link_text,\n                                    reference: 'link_text',\n                                    tagName: 'p',\n                                    classes: ['link'],\n                                    placeholder: \"Add link text for a CTA (optional)\"\n                                },\n                                {\n                                    value: link_href,\n                                    reference: 'link_href',\n                                    tagName: 'p',\n                                    classes: ['link'],\n                                    placeholder: \"Add link for a CTA (optional)\"\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","/**\n * Embed Wrapper.\n */\n\nconst { addFilter } = wp.hooks;\nconst { Fragment } = wp.element;\n\nexport default function extendCoreVideo() {\n    const { __ } = wp.i18n;\n    const { createHigherOrderComponent } = wp.compose;\n    const { InspectorControls, MediaUpload } = wp.blockEditor;\n    const { PanelBody, Button, TextControl } = wp.components;\n\n    function customAttributes(props, name) {\n        if ('core/video' !== name && 'core/embed' !== name && 'core-embed/youtube' !== name && 'core-embed/vimeo' !== name ) {\n            return props;\n        }\n    \n        const customAttributes = {\n            image_id: {\n                type: 'Number',\n                default: 0,\n            },\n            image_url: {\n                type: 'String',\n                default: '',\n            },\n            image_alt: {\n                type: 'String',\n                default: '',\n            },\n            caption: {\n                type: 'String',\n                default: '',\n            }\n        }\n\n        const attributes = {\n            ...props.attributes,\n            ...customAttributes,\n        };\n\n        const description = `${props.description}`;\n\n        return {\n            ...props,\n            attributes,\n            description,\n        };\n    }\n\n    const getImageButton = (openEvent, label) => {\n        return (\n            <div className=\"button-container\">\n                <Button \n                    onClick={ openEvent }\n                    className='button button-large'\n                >\n                {label}\n                </Button>\n            </div>\n        );\n    };\n\n    const withInspectorControls = createHigherOrderComponent((BlockEdit) => {\n        return (props) => {\n\n            if ( 'core/video' !== props.name && 'core/embed' !== props.name && 'core-embed/youtube' !== props.name && 'core-embed/vimeo' !== props.name ) {\n                return <BlockEdit {...props} />;\n            }\n\n            const { attributes, setAttributes } = props;\n            const { image_id, image_alt, image_url, caption } = attributes;\n            const label = image_url !== '' ? 'Update Placeholder Image' : 'Add Placeholder Image';  \n            function updateAttributeValue(attribute, value) {\n                setAttributes({ [attribute]: value });\n            }\n            return [\n                <Fragment>\n                    <InspectorControls>\n                        <PanelBody title={__('Embed Video Settings')}>\n                            {\n                                image_url !== '' ? \n                                <div>\n                                    <p>Current Placeholder Image:</p>\n                                    <img  src={image_url}  /> \n                                    <div className=\"button-container\"> \n                                        <Button \n                                            onClick={ function() { setAttributes({ 'image_alt': '', 'image_url': '', 'image_id': ''}) } }\n                                        >\n                                            Remove Image\n                                        </Button>\n                                    </div>\n                                </div>\n                                \n                                : \n                                <p className=\"copy--italic\">Please add a placeholder image.</p>\n                            }\n                            <MediaUpload\n                                onSelect={ media => { setAttributes({'image_alt': media.alt, 'image_url': media.url, 'image_id': media.id.toString() }); } }\n                                type=\"image\"\n                                value={ image_id }\n                                render={ ({ open }) => getImageButton(open, label ) }\n                            />\n                            <TextControl \n                                value={caption}\n                                onChange={(value) => { updateAttributeValue('caption', value) }}\n                                label=\"Caption (Optional):\"\n                            />\n                        </PanelBody>\n                    </InspectorControls>\n                    <BlockEdit {...props} />\n                </Fragment>,\n                null\n            ];\n        };\n    }, 'withInspectorControl');\n\n\n\n    // Add attribute to core block\n    addFilter(\n        'blocks.registerBlockType',\n        'pg/core-embed',\n        customAttributes\n    );\n\n    // Add inspector controls for attribute\n    addFilter(\n        'editor.BlockEdit',\n        'pg/core-embed',\n        withInspectorControls\n    );\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function jobBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const { i18n } = wp;\n\n    const blockSlug = \"job-block\";\n\tconst blockTitle = \"Create job block\";\n\tconst blockDescription = \"Component to create job block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"users\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        emptyState: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title, emptyState } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-job__block\">\n                    <p className=\"block-title\">Jobs Block</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title\"\n                            },\n                        ]}\n                    />\n                    <div>\n                        <CustomRichText \n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                            components={[\n                                {\n                                    value: emptyState,\n                                    reference: \"emptyState\",\n                                    tagName: \"p\",\n                                }\n                            ]}\n                        />\n                    </div>    \n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title, emptyState } = attributes;\n\t\t},\n\t});\n}","import usStates from \"./us-states\";\nimport provinces from \"./provinces\";\n\nexport default class Location {\n    constructor() {\n        this.states = usStates;\n        this.provinces = provinces;\n    }\n    getProvinces() {\n        const provinces = [];\n        for (let province in this.provinces) {\n            const option = {\n                label: this.provinces[province],\n                value: province\n            }\n            provinces.push(option);\n        }\n        return provinces;\n    }\n    getStates() {\n        const states = [];\n        for (let state in this.states) {\n            const option = {\n                label: this.states[state],\n                value: state\n            }\n            states.push(option);\n        }\n        return states;\n    }\n}","export const namespace = 'pg';","export default function CustomErrors(fields, values) {\n  const compileErrors = (fields, values) => {\n    if (Object.keys(fields).length > 0 && fields.constructor === Object && values.length > 0) {\n      const errorFields = values.filter((value) => {\n        return fields[`${value}`] === undefined;\n      });\n      return errorFields;\n    } \n    throw new Error(`${fields.type} control missing all required fields`);\n  }\n\n  const verifyInputs = (fields, values) => {\n    const errorFields = compileErrors(fields, values);\n    if (errorFields.length > 0) {\n      throw new Error( `${fields.type} control is missing properties ${errorFields.join(', ')} `)\n    } \n  }\n\n  verifyInputs(fields, values);\n}\n","export default function DefaultAttrs(fields, source = null) {\n    const attributes = {};\n    if (Array.isArray(fields) && fields.length > 0) {\n        fields.forEach((field) => {\n            attributes[`${field}`] = {\n                type: 'string',\n                default: '',\n            }\n            if (source) {\n                attributes[`${field}`]['source'] = source;\n                attributes[`${field}`]['meta'] = field;\n            }\n        });\n        return attributes;\n    }\n}\n","export default {\n    AB: \"Alberta\",\n    BC: \"British Columbia\",\n    MB: \"Manitoba\",\n    NB: \"New Brunswick\",\n    NL: \"Newfoundland and Labrador\",\n    NT: \"Northwest Territories\",\n    NS: \"Nova Scotia\",\n    NU: \"Nunavut\",\n    ON: \"Ontario\",\n    PE: \"Prince Edward Island\",\n    QC: \"Quebec\",\n    SK: \"Saskatchewan\",\n    YT: \"Yukon Territory\"\n}","export default {\n    AL: \"Alabama\",\n    AK: \"Alaska\",\n    AS: \"American Samoa\",\n    AZ: \"Arizona\",\n    AR: \"Arkansas\",\n    CA: \"California\",\n    CO: \"Colorado\",\n    CT: \"Connecticut\",\n    DE: \"Delaware\",\n    DC: \"District Of Columbia\",\n    FM: \"Federated States Of Micronesia\",\n    FL: \"Florida\",\n    GA: \"Georgia\",\n    GU: \"Guam\",\n    HI: \"Hawaii\",\n    ID: \"Idaho\",\n    IL: \"Illinois\",\n    IN: \"Indiana\",\n    IA: \"Iowa\",\n    KS: \"Kansas\",\n    KY: \"Kentucky\",\n    LA: \"Louisiana\",\n    ME: \"Maine\",\n    MH: \"Marshall Islands\",\n    MD: \"Maryland\",\n    MA: \"Massachusetts\",\n    MI: \"Michigan\",\n    MN: \"Minnesota\",\n    MS: \"Mississippi\",\n    MO: \"Missouri\",\n    MT: \"Montana\",\n    NE: \"Nebraska\",\n    NV: \"Nevada\",\n    NH: \"New Hampshire\",\n    NJ: \"New Jersey\",\n    NM: \"New Mexico\",\n    NY: \"New York\",\n    NC: \"North Carolina\",\n    ND: \"North Dakota\",\n    MP: \"Northern Mariana Islands\",\n    OH: \"Ohio\",\n    OK: \"Oklahoma\",\n    OR: \"Oregon\",\n    PW: \"Palau\",\n    PA: \"Pennsylvania\",\n    PR: \"Puerto Rico\",\n    RI: \"Rhode Island\",\n    SC: \"South Carolina\",\n    SD: \"South Dakota\",\n    TN: \"Tennessee\",\n    TX: \"Texas\",\n    UT: \"Utah\",\n    VT: \"Vermont\",\n    VI: \"Virgin Islands\",\n    VA: \"Virginia\",\n    WA: \"Washington\",\n    WV: \"West Virginia\",\n    WI: \"Wisconsin\",\n    WY: \"Wyoming\"\n}","//Helpers\nimport { namespace } from '../blocks/helper-functions/constants';\n\nimport CustomImageUpload from \"../blocks/reusable/custom-image-upload.jsx\";\nimport CustomRichText from \"../blocks/reusable/custom-richtext-component.jsx\";\n\nexport default function imageBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"custom-image\";\n\tconst blockTitle = \"Media - Image\";\n\tconst blockDescription = \"A single image upload.\";\n\tconst blockCategory = \"media\";\n    const blockIcon = \"format-image\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: blockTitle,\n\t\tdescription: blockDescription,\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes: {\n            caption: {\n                type: 'String',\n                default: '',\n            },\n            image_alt: {\n                type: 'String',\n                default: '',\n            },\n            image_url: {\n                type: 'String',\n                default: '',\n            },\n            image_id: {\n                type: 'Number',\n                default: 0,\n            }\n        },\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n            const { caption, image_id, image_url, image_alt } = attributes;\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div className=\"custom-component\">\n                    <p className=\"block-title\">Media - Image</p>\n                    <CustomImageUpload\n                        components={[\n                            {\n                                value: image_url,\n                                reference: 'image_url',\n                                altValue: image_alt,\n                                altReference: 'image_alt',\n                                idValue: image_id,\n                                idReference: 'image_id',\n                                buttonText: 'Add an image',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: caption,\n                                reference: \"caption\",\n                                classes: ['caption'],\n                                tagName: \"p\",\n                                settings: [],\n                                placeholder: \"Please provide a caption for your image\"\n                            },\n                        ]}\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n            const { caption, image_id, image_alt, image_url } = attributes;\n            return null;\n        },\n\t});\n}","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function listImageBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Image List Block\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"image-list\";\n\tconst title = \"List\";\n\tconst description = \"A single list.\";\n\tconst category = \"common\";\n    const icon = \"align-left\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        image_id: {\n            type: 'Number',\n            default: 0,\n        },\n        image_alt: {\n            type: 'String',\n            default: '',\n        },\n        image_url: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        parent: [`${namespace}/image-list-container`],\n        attributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                image_url, \n                image_alt, \n                image_id, \n                title,\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <div className={`custom-child`}>\n                    <p className=\"block-title\">List</p>\n                    <div>\n                        <CustomImageUpload\n                            components={[\n                                {\n                                    value: image_url,\n                                    reference: 'image_url',\n                                    altValue: image_alt,\n                                    altReference: 'image_alt',\n                                    idValue: image_id,\n                                    idReference: 'image_id',\n                                    buttonText: 'Add Icon (optional)',\n                                    imageClasses: ['image-text__image']\n                                }\n                            ]}\n                            onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                        />\n                        <CustomRichText \n                            components={[\n                                {\n                                    value: title,\n                                    reference: 'title',\n                                    tagName: 'h4',\n                                    classes: ['heading_three'],\n                                    placeholder: 'Add title'\n                                },\n                            ]}\n                            onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                        />\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks allowedBlocks={['core/list', `${namespace}/paragraph-no-alignment`]} />\n                        )}  \n                    </div>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function listImageContainerBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Image List Container Block\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"image-list-container\";\n\tconst title = \"Content Block - Square Image\";\n\tconst description = \"Container with an image and lists.\";\n\tconst category = \"containers\";\n    const icon = \"align-pull-left\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        bg_color: {\n            type: 'String',\n            default: 'white',\n        },\n        image_id: {\n            type: 'Number',\n            default: 0,\n        },\n        image_alt: {\n            type: 'String',\n            default: '',\n        },\n        image_url: {\n            type: 'String',\n            default: '',\n        },\n        reverse: {\n            type: 'Boolean',\n            default: false,\n        },\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                bg_color,\n                description,\n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title,\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'toggle',\n                            label: 'Reverse Layout',\n                            reference: 'reverse',\n                            value: reverse,\n                        },\n                        {\n                            type: 'select',\n                            label: 'Background Color',\n                            reference: 'bg_color',\n                            value: bg_color,\n                            options: [\n                                { value: 'white', label: 'White' },\n                                { value: 'grey', label: 'Grey' },\n                                { value: 'black', label: 'Black' },\n                                { value: 'red', label: 'Dark Red' },\n                            ]\n                        }\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div className={`custom-container block--${bg_color}`}>\n                    <p className=\"block-title\">Content Block - Square Image</p>\n                    <section>\n                        <div className={reverse ? 'row reverse' : 'row' }>\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                <CustomImageUpload\n                                    components={[\n                                        {\n                                            value: image_url,\n                                            reference: 'image_url',\n                                            altValue: image_alt,\n                                            altReference: 'image_alt',\n                                            idValue: image_id,\n                                            idReference: 'image_id',\n                                            buttonText: 'Add Image',\n                                            imageClasses: ['image-text__image']\n                                        }\n                                    ]}\n                                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                                />\n                            </div>\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                \n                                {save ? (\n                                    <InnerBlocks.Content />\n                                ) : (\n                                    <InnerBlocks \n                                        allowedBlocks={[`${namespace}/image-list`]} \n                                        template={[[`${namespace}/image-list`]]} \n                                    />\n                                )}\n                            </div>\n                            \n                        </div>\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","// Helpers\nimport { namespace } from './helper-functions/constants.js';\nimport defaultAttrs from './helper-functions/default-attrs';\n\n// Reusable\nimport CustomRichText from './reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from './reusable/custom-image-upload.jsx';\nimport BlockSettings from './reusable/block-custom-settings.jsx';\n\nexport default function imageTextBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Image Text Block\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"image-text\";\n\tconst title = \"Content Block - Slanted Image\";\n\tconst description = \"A reversible component with image one side and text on the other.\";\n\tconst category = \"common\";\n    const icon = \"align-left\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttributes = [\n        'image_url', \n        'image_alt', \n        'title', \n        'bg_color'\n    ];\n    const attributes = defaultAttrs(stringAttributes);\n    attributes['reverse'] = {\n        type: 'boolean',\n        default: false,\n    }\n    attributes['image_id'] = {\n        type: 'integer',\n        default: 0,\n    }\n    attributes['bg_color']['default'] = 'white';\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n    attributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                bg_color,\n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'select',\n                            label: 'Background color',\n                            reference: 'bg_color',\n                            value: bg_color,\n                            options: [\n                                { label: 'White', value: 'white' },\n                                { label: 'Grey', value: 'grey' }\n                            ]\n                        },\n                        {\n                            type: 'toggle',\n                            label: 'Reverse Layout',\n                            reference: 'reverse',\n                            value: reverse,\n                        }\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div className={`image-text__container custom-component block--${bg_color}`}>\n                    <p className=\"block-title\">Content Block - Slanted Image</p>\n                    <section>\n                        <div className={reverse ? 'row reverse' : 'row' }>\n\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                <CustomRichText \n                                    components={[\n                                        {\n                                        value: title,\n                                        reference: 'title',\n                                        tagName: 'h2',\n                                        classes: ['heading-one'],\n                                        },\n                                    ]}\n                                    onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                                />\n                                {save ? (\n                                    <InnerBlocks.Content />\n                                ) : (\n                                    <InnerBlocks allowedBlocks={[`${namespace}/paragraph-no-alignment`, 'core/list', 'core/buttons']} />\n                                )}\n                            </div>\n                            <div className=\"col-xs-12 col-md-6 col-v-center\">\n                                <CustomImageUpload\n                                    components={[\n                                        {\n                                            value: image_url,\n                                            reference: 'image_url',\n                                            altValue: image_alt,\n                                            altReference: 'image_alt',\n                                            idValue: image_id,\n                                            idReference: 'image_id',\n                                            buttonText: 'Add Image',\n                                            imageClasses: ['image-text__image']\n                                        }\n                                    ]}\n                                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                                />\n                            </div>\n                        </div>\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const { \n                image_url, \n                image_alt, \n                image_id, \n                reverse, \n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from \"../reusable/block-custom-settings.jsx\";\n\nexport default function trmcLogoContainerBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"logos-container\";\n\tconst blockTitle = \"Logo Parade\";\n\tconst blockDescription = \"Creates a container for logos parade.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"awards\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        bg_color: {\n            type: 'String',\n            default: 'white'\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n        title: {\n            type: 'String',\n            default: '',\n        }\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { bg_color, description, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container block--${bg_color} }` }>\n                    <p className=\"block-title\">Logo Parade</p>\n                    <BlockSettings \n                        controls={[   \n                            {\n                                type: 'select',\n                                label: 'Background Color',\n                                reference: 'bg_color',\n                                value: bg_color,\n                                options: [\n                                    { value: 'white', label: 'White'},\n                                    { value: 'grey', label: 'Grey' }\n                                ]\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading_one'],\n                                placeholder: 'Logos title here',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add a description'\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className=\"col--4\">\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/logo`]}\n                                template={[[`${namespace}/logo`]]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","//Helpers\nimport { namespace } from '../helper-functions/constants';\n\nimport CustomImageUpload from \"../reusable/custom-image-upload.jsx\";\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function logoBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"logo\";\n\tconst blockTitle = \"Logo\";\n\tconst blockDescription = \"A single logo.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"format-image\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: blockTitle,\n\t\tdescription: blockDescription,\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes: {\n            image_alt: {\n                type: 'String',\n                default: '',\n            },\n            image_url: {\n                type: 'String',\n                default: '',\n            },\n            image_id: {\n                type: 'Number',\n                default: 0,\n            },\n            link: {\n                type: 'String',\n                default: '',\n            }\n        },\n        parent: [`${namespace}/logos-container`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n            const { image_id, image_url, image_alt, link } = attributes;\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Logo</p>\n                    <CustomImageUpload\n                        components={[\n                            {\n                                value: image_url,\n                                reference: 'image_url',\n                                altValue: image_alt,\n                                altReference: 'image_alt',\n                                idValue: image_id,\n                                idReference: 'image_id',\n                                buttonText: 'Add an image',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'link',\n                                value: link,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add a link for this logo (optional)',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n            const { image_id, image_alt, image_url } = attributes;\n            return null;\n        },\n\t});\n}","import { namespace } from '../helper-functions/constants';\nimport defaultAttrs from '../helper-functions/default-attrs';\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\n\n\nexport default function leadershipMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n    const {\n        Inserter\n    } = wp.blockEditor;\n\n    const meta_fields = [\n        'name',\n        'position',\n        'education',\n        'excerpt',\n        'copy',\n        'image_alt',\n        'image_url',\n        'image_id'\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/leadership-meta-block`, {\n\t\ttitle: 'Leadership Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { name, position, education, excerpt, copy, image_url, image_id, image_alt } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">Leadership Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={name}\n                                onChange={(value) => { updateAttributeValue('name', value) }}\n                                label=\"Name:\"\n                            />\n                            <TextControl\n                                value={position}\n                                onChange={(value) => { updateAttributeValue('position', value) }}\n                                label=\"Position:\"\n                            />\n                            <TextControl\n                                value={education}\n                                onChange={(value) => { updateAttributeValue('education', value) }}\n                                label=\"Education:\"\n                            />\n                            <CustomRichText \n                                components={[\n                                    {\n                                        reference: 'excerpt',\n                                        value: excerpt,\n                                        tagName: 'p',\n                                        classes: ['paragraph'],\n                                        placeholder: 'Add excerpt',\n                                    }\n                                ]}\n                                onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                            />\n                             <CustomRichText \n                                components={[\n                                    {\n                                        reference: 'copy',\n                                        value: copy,\n                                        tagName: 'p',\n                                        classes: ['paragraph'],\n                                        placeholder: 'Add copy',\n                                    }\n                                ]}\n                                onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                            />\n                            <CustomImageUpload\n                                components={[\n                                    {\n                                        value: image_url,\n                                        reference: 'image_url',\n                                        altValue: image_alt,\n                                        altReference: 'image_alt',\n                                        idValue: image_id,\n                                        idReference: 'image_id',\n                                        buttonText: 'Add Image',\n                                        imageClasses: ['image-text__image']\n                                    }\n                                ]}\n                                onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                            />\n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nimport LocationsClass from '../helper-functions/Locations';\n\nexport default function locationMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl, TextareaControl, RadioControl, SelectControl, Button  } = wp.components;\n    \n    const meta_fields = [\n        'location_country',\n        'location_address',\n        'location_city',\n        'location_code',\n        'location_province',\n        'location_lat',\n        'location_lng',\n        'location_phone',\n        'location_fax',\n        'location_hours',\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n    attributes['error'] = {\n        type: 'String',\n        default: '',\n    };\n\n    const Location = new LocationsClass();\n    const provinces = Location.getProvinces();\n    provinces.unshift({label: 'Select province', value: ''});\n    const states = Location.getStates();\n    states.unshift({label: 'Select state', value: ''});\n    \n\tregisterBlockType(`${namespace}/location-meta-block`, {\n\t\ttitle: 'Location Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { location_country, location_address, location_city, location_province, location_code, location_lat, location_lng, location_phone, location_fax, location_hours, error} = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n            const setLatLng = (coordinates) => {\n                if (coordinates.length > 1) {\n                    updateAttributeValue('location_lng', `${coordinates[0]}`);\n                    updateAttributeValue('location_lat', `${coordinates[1]}`);\n                } \n            }\n\n            const apiCall = async (url) => {\n                try {\n                    const resp = await fetch(url, { method: 'GET', redirect: 'follow', referrer: 'no-referrer', });\n                    const data = await resp.json();\n                    const locations = data.features;\n                    if (locations && locations.length && locations[0].geometry && locations[0].geometry.coordinates) {\n                        setLatLng(locations[0].geometry.coordinates);\n                    }\n                } catch(err) {\n                    updateAttributeValue('error', 'Something went wrong');\n                }\n            };\n\n            const buildUrl = (address) => {\n                const encodedAddress = encodeURI(address);\n                const country = location_country ? location_country : 'CA';\n                if (ajaxInfo.apiKey) {\n                    const url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodedAddress}.json?country=${country}&access_token=${ajaxInfo.apiKey}`;\n                    apiCall(url);\n                }\n            }\n\n            const verifyAddress = () => {\n                if  ('' === location_address || '' === location_city || '' === location_province || '' === location_code) {\n                    updateAttributeValue('error', 'Please provide address, city, province/state, and postal/zip code');\n                    return false;\n                }\n                updateAttributeValue('error', '');\n                return `${location_address} ${location_city} ${location_province} ${location_code}`;\n            }\n\n            const fetchLatLng = async () => {\n\n                const address = verifyAddress();\n                if (!address) {\n                    return;\n                }\n                buildUrl(address);\n            };\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">Location Metadata</p>\n                    <div className=\"page-settings__controls\">\n                        <RadioControl \n                            value={location_country}\n                            onChange={(value) => { updateAttributeValue('location_province', ''); updateAttributeValue('location_country', value) }}\n                            label=\"Country:\"\n                            selected={location_country ? location_country : 'CA'}\n                            options={[\n                                { label: \"Canada\", value: \"CA\" },\n                                { label: \"United States\", value: \"US\" }\n                            ]}\n                        />\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={location_address}\n                                onChange={(value) => { updateAttributeValue('location_address', value) }}\n                                label=\"Street Address:\"\n                            />\n                            <TextControl\n                                value={location_city}\n                                onChange={(value) => { updateAttributeValue('location_city', value) }}\n                                label=\"City:\"\n                            />\n                            <SelectControl \n                                value={location_province }\n                                onChange={(value) => { updateAttributeValue('location_province', value) }}\n                                label={ location_country !== 'US' ? \"Province/Territory:\" : \"State\" }\n                                options={ location_country !== 'US' ? provinces : states }\n                            /> \n                            <TextControl\n                                value={location_code}\n                                onChange={(value) => { updateAttributeValue('location_code', value) }}\n                                label={ location_country !== 'US' ? 'Postal Code:' : 'Zip Code'}\n                            />\n                            <TextControl\n                                value={location_phone}\n                                onChange={(value) => { updateAttributeValue('location_phone', value) }}\n                                label=\"Phone:\"\n                            />\n                            <TextControl\n                                value={location_fax}\n                                onChange={(value) => { updateAttributeValue('location_fax', value) }}\n                                label=\"Fax:\"\n                            />\n                            <TextareaControl\n                                value={location_hours}\n                                onChange={(value) => { updateAttributeValue('location_hours', value) }}\n                                label=\"Hours:\"\n                            />\n                            <p style={{ fontSize: '14px', paddingTop: '10px', fontStyle: 'italic', textAlign: 'center' }}>Longitude and Latitude are generated by the MapBox Geocode API. Please ensure the MapBox API Key is set in the theme settings.</p>\n                            <p style={{ fontSize: '14px', paddingTop: '10px', fontStyle: 'italic', textAlign: 'center' }}>If you'd prefer to limit the number of calls to the MapBox API you can manually find Latitude and Longitude using <a href=\"https://www.latlong.net/\">this tool</a> and add them manually.</p>\n                            <div className=\"button-container copy--center\">\n                                <Button\n                                    className=\"button button-large\"\n                                    onClick={fetchLatLng}\n                                >\n                                    { '' !== location_lat && '' !== location_lng ? 'Update Longitude and Latitude' : 'Generate Longitude and Latitude' }\n                                </Button>\n                            </div>\n                            { error !== '' ? <p class=\"copy--center\">{ error }</p> : null }\n                            \n                            <TextControl\n                                value={location_lat}\n                                onChange={(value) => { updateAttributeValue('location_lat', value) }}\n                                label=\"Latitude\"\n                            />\n                            <TextControl\n                                value={location_lng}\n                                onChange={(value) => { updateAttributeValue('location_lng', value) }}\n                                label=\"Longitude\"\n                            />\n                        </div>\n                    </div>\n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n\n","import { namespace } from '../helper-functions/constants';\nimport defaultAttrs from '../helper-functions/default-attrs';\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\n\n\nexport default function newsMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n    const {\n        Inserter\n    } = wp.blockEditor;\n\n    const meta_fields = [\n        'publication_date',\n        'description',\n        'source_publication',\n        'authors',\n        'external_link',\n        'image_url',\n        'image_alt',\n        'image_id',\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/news-meta-block`, {\n\t\ttitle: 'News Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { publication_date, description, source_publication, authors, external_link, image_url, image_id, image_alt } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">News Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={publication_date}\n                                onChange={(value) => { updateAttributeValue('publication_date', value) }}\n                                label=\"Publication date (YYYY/MM/DD):\"\n                            />\n                            <CustomRichText \n                                components={[\n                                    {\n                                        reference: 'description',\n                                        value: description,\n                                        tagName: 'p',\n                                        classes: ['paragraph'],\n                                        placeholder: 'Add description',\n                                    }\n                                ]}\n                                onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                            />\n                            <TextControl\n                                value={source_publication}\n                                onChange={(value) => { updateAttributeValue('source_publication', value) }}\n                                label=\"Source publication:\"\n                            />\n                            <TextControl\n                                value={authors}\n                                onChange={(value) => { updateAttributeValue('authors', value) }}\n                                label=\"Author(s):\"\n                                placeholder=\"Please separate authors with a comma\"\n                            />\n                              <TextControl\n                                value={external_link}\n                                onChange={(value) => { updateAttributeValue('external_link', value) }}\n                                label=\"External link:\"\n                            />\n                            <CustomImageUpload\n                                components={[\n                                    {\n                                        value: image_url,\n                                        reference: 'image_url',\n                                        altValue: image_alt,\n                                        altReference: 'image_alt',\n                                        idValue: image_id,\n                                        idReference: 'image_id',\n                                        buttonText: 'Add Image',\n                                        imageClasses: ['image-text__image']\n                                    }\n                                ]}\n                                onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                            />\n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function locationMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n    const {\n        Inserter\n    } = wp.blockEditor;\n\n    const meta_fields = [\n        'news_release_date',\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/news-release-meta-block`, {\n\t\ttitle: 'News Release Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { news_release_date } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">New Release Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={news_release_date}\n                                onChange={(value) => { updateAttributeValue('news_release_date', value) }}\n                                label=\"Release Date (YYYY/MM/DD):\"\n                            />\n                        </div>\n                    </div> \n                    \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n\n","import { namespace } from '../helper-functions/constants';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nimport CustomVideoUpload from \"../reusable/custom-video-upload.jsx\";\n\nexport default function pageMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl, TextareaControl, RadioControl, SelectControl, ToggleControl, Button  } = wp.components;\n    const {\n        Inserter\n    } = wp.blockEditor;\n\n    const meta_fields = [\n        'hero_style',\n        'hero_background_color',\n        'headline',\n        'hero_cta_one_link',\n        'hero_cta_one_text',\n        'hero_cta_two_link',\n        'hero_cta_two_text',\n        'hero_video_id',\n        'hero_video_url',\n        'hero_video_alt',\n        'gradient_background'\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n    attributes['hero_style']['default'] = 'square';\n    attributes['hero_background_color']['default'] = 'grey';\n    attributes['gradient_background']['default'] = 'false';\n\n\tregisterBlockType(`${namespace}/page-meta-block`, {\n\t\ttitle: 'Page Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\n            const className = `${props.className} meta-block`;\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                gradient_background, \n                hero_style, \n                hero_background_color, \n                headline, \n                hero_cta_one_link, \n                hero_cta_one_text, \n                hero_cta_two_link, \n                hero_cta_two_text, \n                hero_video_url, \n                hero_video_id, \n                hero_video_alt \n            } = attributes;\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            function getImageButton(openEvent, label) {\n                {\n                    return (\n                        <div className=\"components-base-control\">\n                            <Button \n                                onClick={ openEvent }\n                                className='button button-large'\n                            >\n                                {label}\n                            </Button>\n                        </div>\n                    );\n                }\n                \n            };\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className={className}>\n                    <div className=\"page-settings__controls\">\n                        <h4>Header Settings</h4>\n                        { hero_style === 'slanted' ? \n                            <p class=\"paragraph--core copy--italic\">Image needs to be added as \"Featured Image\" in sidebar.</p>\n                        :\n                            null\n                        }\n                        <p class=\"paragraph--core copy--italic mb-xs-3\">An excerpt can be added in the sidebar (optional).</p>\n                        <RadioControl \n                            value={hero_style}\n                            onChange={(value) => { updateAttributeValue('hero_style', value) }}\n                            label=\"Header Style:\"\n                            selected={hero_style ? hero_style : 'square'}\n                            options={[\n                                { label: \"Square\", value: \"square\" },\n                                { label: \"Slanted\", value: \"slanted\" },\n                                { label: \"Video\", value: \"video\" }\n                            ]}\n                        />\n                        <div className=\"mt-xs-3\">\n                            <SelectControl \n                                value={hero_background_color }\n                                onChange={(value) => { updateAttributeValue('hero_background_color', value) }}\n                                label=\"Background Color:\"\n                                options={[\n                                    { label: 'Grey', value: 'grey' },\n                                    { label: 'Red', value: 'red' },\n                                    { label: 'Black', value: 'black' },\n                                ]}\n                            /> \n                        </div>\n                        {\n                            hero_style === 'video' ? \n                                <div className=\"mt-xs-3\">\n                                    <CustomVideoUpload \n                                        components={[\n                                            {\n                                                value: hero_video_url,\n                                                reference: 'hero_video_url',\n                                                altValue: hero_video_alt,\n                                                altReference: 'hero_video_alt',\n                                                idValue: hero_video_id,\n                                                idReference: 'hero_video_id',\n                                                buttonText: 'Add a video',\n                                            },\n                                        ]}\n                                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                                    />\n                                </div>\n                            : \n                            null\n                        }\n                        <div className=\"mv-xs-2\">\n                            <ToggleControl\n                                label=\"Add gradient grey background to page?\"\n                                checked={ gradient_background === 'true' }\n                                onChange={(change) => updateAttributeValue( 'gradient_background', `${change === true}`)}\n                            />\n                        </div>\n                        <TextareaControl\n                            value={headline}\n                            onChange={(value) => { updateAttributeValue('headline', value) }}\n                            label=\"Headline:\"\n                        />\n                        \n                        <TextControl\n                            value={hero_cta_one_text}\n                            onChange={(value) => { updateAttributeValue('hero_cta_one_text', value) }}\n                            label=\"First Button Text (optional):\"\n                        />\n                        <TextControl\n                            value={hero_cta_one_link}\n                            onChange={(value) => { updateAttributeValue('hero_cta_one_link', value) }}\n                            label=\"First Button Link (optional):\"\n                        />\n                        <TextControl\n                            value={hero_cta_two_text}\n                            onChange={(value) => { updateAttributeValue('hero_cta_two_text', value) }}\n                            label=\"Second Button Text (optional):\"\n                        />\n                        <TextControl\n                            value={hero_cta_two_link}\n                            onChange={(value) => { updateAttributeValue('hero_cta_two_link', value) }}\n                            label=\"Second Button Link (optional):\"\n                        />\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n\n","import { namespace } from '../helper-functions/constants';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function researchBlogMetaBlock() {\n\n    const { registerBlockType } = wp.blocks;\n\tconst { TextControl } = wp.components;\n    const {\n        Inserter\n    } = wp.blockEditor;\n\n    const meta_fields = [\n        'publication_date', 'post_info'\n    ];\n    const attributes = defaultAttrs(meta_fields, 'meta');\n\n\tregisterBlockType(`${namespace}/research-blog-meta-block`, {\n\t\ttitle: 'Research Blogs Meta',\n\t\ticon: 'align-full-width',\n        category: 'common',\n        supports: {\n            multiple: false,\n        },\n        attributes,\n        edit: (props) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { publication_date, post_info } = attributes;\n            console.log(attributes)\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn ([\n\t\t\t\tnull,\n\t\t\t\t<div className=\"custom-component\">\n                    <p className=\"block-title\">Research Blog Meta</p>\n                    <div className=\"page-settings__controls\">\n                        <div className=\"mt-xs-3\">\n                            <TextControl\n                                value={publication_date}\n                                onChange={(value) => { updateAttributeValue('publication_date', value) }}\n                                label=\"Publication Date (YYYY/MM/DD):\"\n                            />\n                        </div>\n                    </div> \n                </div>\n\t\t\t])\n\t\t},\n\t\t// No information saved to the block\n\t\t// Data is saved to post meta via attributes\n\t\tsave: function () {\n\t\t\treturn null;\n\t\t}\n\t});\n}\n","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function trmcPageStripGraphicBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Page Strip Graphic\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"page-strip-graphic\";\n\tconst title = \"Page Strip - Image  BG\";\n\tconst description = \"A page strip with a background image.\";\n\tconst category = \"page-strips\";\n    const icon = \"format-image\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        image_id: {\n            type: 'Number',\n            default: 0\n        },\n        image_alt: {\n            type: 'String',\n            default: ''\n        },\n        image_url: {\n            type: 'String',\n            default: ''\n        }\n    }\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n        transforms: {\n            to: [\n                {\n                    type: \"block\",\n                    blocks: [`${namespace}/page-strip`],\n                    transform: ( attributes, innerBlocks ) => {\n                        return wp.blocks.createBlock(\n                            `${namespace}/page-strip`,\n                            attributes,\n                            innerBlocks\n                        );\n                    },\n                },\n            ]\n        },\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                title,\n                image_alt,\n                image_id,\n                image_url\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'image',\n                            label: 'Background Image',\n                            image_id,\n                            image_alt,\n                            image_url,\n                            id_reference: 'image_id',\n                            url_reference: 'image_url',\n                            alt_reference: 'image_alt',\n                        }\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div class=\"custom-component block--black\" style={{ backgroundImage: `linear-gradient(to bottom, rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url(${image_url})`, backgroundSize: 'cover', backgroundPosition: 'center' }}>\n                    <p className=\"block-title\">Page Strip - Image BG</p>\n                    <section >\n                        <div>\n                            <div className=\"copy--center\">\n                                <CustomRichText \n                                    components={[\n                                        {\n                                            value: title,\n                                            reference: 'title',\n                                            tagName: 'h2',\n                                            classes: ['heading_one'],\n                                            placeholder: 'Please provide a title for this block'\n                                        },\n                                    ]}\n                                    onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                                />\n                                {save ? (\n                                    <InnerBlocks.Content />\n                                ) : (\n                                    <InnerBlocks allowedBlocks={[`${namespace}/paragraph-no-alignment`, 'core/buttons']} />\n                                )}\n                            </div>\n                        </div>\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const {\n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","// Helpers\nimport { namespace } from '../helper-functions/constants.js';\nimport defaultAttrs from '../helper-functions/default-attrs';\n\n// Reusable\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport BlockSettings from '../reusable/block-custom-settings.jsx';\n\nexport default function pageStripBlock() {\n\t/**\n\t * GUTENBERG BLOCK - Page Strip\n\t */\n\tconst { registerBlockType, createBlock } = wp.blocks;\n\tconst { InnerBlocks } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const slug = \"page-strip\";\n\tconst title = \"Page Strip\";\n\tconst description = \"A page strip with optional CTA.\";\n\tconst category = \"page-strips\";\n    const icon = \"align-center\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttributes = [\n        'bg_color', \n        'title', \n    ];\n    const attributes = defaultAttrs(stringAttributes);\n    \n    attributes['bg_color']['default'] = 'white';\n\tregisterBlockType(`${namespace}/${slug}`, {\n\t\ttitle: i18n.__(title, `${namespace}`),\n\t\tdescription: i18n.__(description, `${namespace}`),\n\t\tcategory,\n\t\ticon,\n        attributes,\n        transforms: {\n            to: [\n                {\n                    type: \"block\",\n                    blocks: [`${namespace}/page-strip-graphic`],\n                    transform: ( attributes, innerBlocks ) => {\n                        return wp.blocks.createBlock(\n                            `${namespace}/page-strip-graphic`,\n                            attributes,\n                            innerBlocks\n                        );\n                    },\n                },\n            ]\n        },\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { \n                bg_color,\n                title\n            } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n            return [\n                <BlockSettings\n                    title=\"Block Settings\"\n                    controls={[\n                        {\n                            type: 'select',\n                            label: 'Background Color',\n                            reference: 'bg_color',\n                            value: bg_color,\n                            options: [\n                                { value: 'white', label: 'White' },\n                                { value: 'grey', label: 'Grey' },\n                                { value: 'black', label: 'Black' },\n                                { value: 'red', label: 'Dark Red' },\n                                { value: 'red-lt', label: 'Light Red' },\n                            ]\n                        }\n                    ]}\n                    onChange={(attribute, change) => { updateAttributeValue(attribute, change) }}\n                />,\n                <div className={`block--${bg_color} custom-component`}>\n                    <p className=\"block-title\">Page Strip</p>\n                    <section>\n                        <div>\n                            <div>\n                                <CustomRichText \n                                    components={[\n                                        {\n                                            value: title,\n                                            reference: 'title',\n                                            tagName: 'h2',\n                                            classes: ['heading_one'],\n                                            placeholder: \"Please provide a title\"\n                                        },\n                                    ]}\n                                    onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) }}\n                                />\n                                {save ? (\n                                    <InnerBlocks.Content />\n                                ) : (\n                                    <InnerBlocks allowedBlocks={[`${namespace}/paragraph-no-alignment`, 'core/buttons']} />\n                                )}\n                            </div>\n                        </div>\n                    </section>\n                </div>,\n\t\t\t];\n\t\t\t\n\t\t},\n\t\tsave: ({attributes}) => {\n            const {\n                bg_color,\n                title\n            } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","{/* \n\nABOUT\nBlock Settings is a custom simple component to easily add a side panel with settings to any custom Gutenberg Block\n\nPROPS \n    title \n        The title for the panel in the sidebar.\n\n    controls\n        An array of objects. Each object is a single setting with the following fields. \n        - type : Can be 'radio', 'select', or 'text'\n        - label : The label for the controls (will be passed through an i18n function)\n        - options : An array of objects, each with a \"label\" and \"value\" field (only for selects and radios).\n        - reference : The name of the attribute it controls\n        - value : The value of the attribute\n\n    onChange\n        A function to update the attribute on the parent on changes in the child. Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n    \n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\n    EXAMPLE \n    Needs to be imported before top of export function. \n\n    <BlockSettings\n        title=\"Block Settings\"\n        controls={[\n            { \n                type: 'radio',\n                label: 'Number of Columns',\n                options: [\n                    { value: '2', label: '2' },\n                    { value: '3', label: '3' },\n                    { value: '4', label: '4' },\n                ],\n                reference: 'columns',\n                value: columns,\n            },\n            { \n                type: 'radio',\n                label: 'Column Style',\n                options: [\n                    { value: 'icon', label: 'With icon' },\n                    { value: 'no-icon', label: 'Without icon' },\n                ],\n                reference: 'columnStyle',\n                value: columnStyle,\n            }\n        ]}\n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    />\n    \n*/}\n\n// Created a custom errors function allow for clearer feedback.\nimport customErrors from '../helper-functions/custom-error.js';\n\nexport default function BlockSettings(props) {\n    const {\n        InspectorControls,\n        MediaUpload\n    } = wp.blockEditor;\n    const {\n        PanelBody,\n        PanelRow,\n        RadioControl,\n        RangeControl,\n        SelectControl,\n        TextControl,\n        ToggleControl,\n        CheckboxControl,\n        Button\n    } = wp.components;\n    const { i18n } = wp;\n    const { title, controls, onChange } = props;\n\n\n    const getImageButton = (openEvent, label) => {\n        return (\n            <div className=\"components-base-control\">\n                <Button \n                    onClick={ openEvent }\n                    className='button button-large'\n                >\n                    {label}\n                </Button>\n            </div>\n        );\n    };\n    let requiredFields;\n    return (\n        <div>\n            <InspectorControls>\n                <PanelBody\n                    title = {i18n.__(title)} \n                >\n                    <PanelRow>\n                        {controls.map((control) => {\n                            switch(control.type) {\n                                case 'radio': \n                                    requiredFields = ['label', 'value', 'options', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <RadioControl\n                                            label={ i18n.__( `${control.label}` ) }\n                                            selected={control.value}\n                                            options={ control.options } \n                                            onChange={(change) => onChange( control.reference, change)}\n                                        />\n                                    )\n                                case 'range':\n                                    requiredFields = ['label', 'value', 'reference', 'min', 'max'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <RangeControl\n                                            label={control.label}\n                                            value={control.value}\n                                            onChange={(change) => onChange(control.reference, change)}\n                                            min={control.min}\n                                            max={control.max}\n                                            initalPosition={control.min}\n                                        />\n                                    )\n                                case 'select':\n                                    requiredFields = ['label', 'value', 'options', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <SelectControl\n                                            label={ i18n.__( `${control.label}` ) }\n                                            value={control.value}\n                                            options={ control.options } \n                                            onChange={(change) => onChange( control.reference, change)}\n                                        />\n                                    )\n                                case 'text': \n                                    requiredFields = ['label', 'value', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <TextControl\n                                            label={ i18n.__( `${control.label}` ) }\n                                            value={ control.value }\n                                            onChange={(change) => onChange( control.reference, change)}\n                                        />   \n                                    )\n                                case 'toggle': \n                                    requiredFields = ['label', 'value', 'reference'];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <ToggleControl\n                                        label={ i18n.__( `${control.label}` ) }\n                                        checked={control.value}\n                                        onChange={(change) => onChange( control.reference, change)}\n                                        />\n                                    )\n                                case 'image': \n                                    requiredFields = ['label', 'image_id', 'id_reference', 'image_url', 'url_reference', 'image_alt', 'alt_reference' ];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <MediaUpload\n                                            onSelect={ media => { onChange(control.alt_reference, media.alt); onChange(control.id_reference, media.id.toString()); onChange(control.url_reference, media.url); } }\n                                            type=\"image\"\n                                            value={ control.image_id }\n                                            render={ ({ open }) => getImageButton(open, control.label ) }\n                                        />\n                                    )\n        \n                                case 'file': \n                                    requiredFields = ['label', 'id_value', 'id_reference', 'url_value', 'url_reference', 'name_value', 'name_reference' ];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                        <MediaUpload\n                                            onSelect={ file => { onChange(control.url_reference, file.url); onChange(control.id_reference, file.id); onChange(control.name_reference, file.filename); } }\n                                            type=\"image\"\n                                            value={ control.file_id }\n                                            render={ ({ open }) => getImageButton(open, control.label ) }\n                                        />\n\n                                        )\n                                case 'checkbox':\n                                    requiredFields = ['label', 'value', 'reference' ];\n                                    customErrors(control, requiredFields);\n                                    return (\n                                    <CheckboxControl\n                                        label={ control.label }\n                                        checked={ control.value }\n                                        onChange={ (change) => onChange(control.reference, change ) }\n                                    />\n                                )\n                                default: \n                                return `Control type either not set or invalid for ${control.label}`;\n                            } \n                        })}\n                    </PanelRow>\n                </PanelBody>    \n            </InspectorControls>\n        </div>\n    )\n}","{/* \n\nABOUT\nCustom Image Upload is a custom component that extends the built in MediaUpload component for easier customization across the site. \n\nPROPS \n    components\n        An array of objects. Each object is a single Media Upload component with associated button with the following fields:\n        - buttonText : The text to be displayed on the upload Button\n        - value : The imageUrl for the specific image.\n        - reference : The name of the image url attribute on the parent component.\n        - altValue : A reference to the image url attribute on the parent component.\n        - reference : The name of the alt value attribute on the parent component.\n        - idValue : A reference to the image id attribute on the parent.\n        - reference : The name of the image id attribute on the parent component.\n        - imageClasses (optional) : An array of classes to be passed to the div containing the image. \n        - buttonClasses (optional) : An array of classes to be passed to the upload image button.\n\n    onChange\n        A function to update the attribute on the parent on changes in the child. \n        Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n    \n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\nEXAMPLE\n\n    <CustomImageUpload\n        components={[\n            {\n                value: imageUrl,\n                reference: 'imageUrl',\n                altValue: imageAlt,\n                altReference: 'imageAlt',\n                idValue: imageId,\n                idReference: 'imageId',\n                buttonText: 'Add an Icon',\n            },\n        ]}\n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    />\n\n*/}\n\nimport customErrors from '../helper-functions/custom-error';\n\nexport default function CustomImageUpload(props) {\n    const {\n        MediaUpload,\n        MediaUploadCheck\n    } = wp.blockEditor;\n    const {\n        Button\n    } = wp.components;\n    const {\n        Fragment\n    } = wp.element;\n    const { i18n } = wp;\n    const checkRequiredValues = (props) => {\n        const requiredFields = ['components', 'onChange'];\n        const values =  props;\n        values.type = 'Custom Image'\n        customErrors(values, requiredFields);\n    }\n    const checkRequiredImageAttributes = (props) => {\n        const requiredFields = ['reference', 'value', 'altValue', 'altReference', 'idReference', 'idValue', 'buttonText']\n        const values = props;\n        values.type = 'Custom Image';\n        customErrors(values, requiredFields);\n    }\n    checkRequiredValues(props);\n    const { components, onChange } = props;\n\n    const clearImage = () => {\n    \n}\n\n    const getImageButton = (openEvent, component) => {\n        if( component.value ) {\n            return (\n                <div>\n                    <div className={component.imageClasses && Array.isArray(component.imageClasses) ? component.imageClasses.join(' ') : 'image' } >\n                        <img \n                            src={ component.value }\n                            onClick={ openEvent }\n                            alt={component.altValue ? component.altValue : ''}\n                        />\n                    </div>\n                    <div className=\"button-container\">\n                        <Button \n                            onClick={ function() { onChange(component.altReference, ''); onChange(component.reference, ''); onChange(component.idReference, '');} }\n                            className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                        >\n                            { i18n.__('Remove Image') }\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"button-container\">\n                    <Button \n                        onClick={ openEvent }\n                        className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                    >\n                        { i18n.__(component.buttonText) }\n                    </Button>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <Fragment>\n            {\n                components.map((component) => {\n                    checkRequiredImageAttributes(component);\n                    return (\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={ media => { onChange(component.altReference, media.alt); onChange(component.reference, media.url); onChange(component.idReference, Number(media.id)); } }\n                                type=\"image\"\n                                value={ component.value }\n                                render={ ({ open }) => getImageButton(open, component) }\n                            />\n                        </MediaUploadCheck>\n                    )\n                })\n            }\n        </Fragment>\n    )\n}","{/* \n\nABOUT\nRichText component is a component to easily add a RichText WordPress component to any existing block. \n\nWARNING\nCurrently the Alignment Toolbar can only be added to the entire Block, not the individual RichText component, so if you enable the Alignment on more than one custom RichText element within a specific block it will show two alignment toolbars side-by-side. \n\nPROPS \n  Components\n    An array of objects. Each object is a single RichText component with the following fields. Can create multiple RichText components.\n      - tagName : The name of the HTML tag to be applied to this RichText component\n      - reference : The name of the attribute it controls\n      - value : The value of the attribute\n      - placeholder (optional) : Pass a string for the RichText placeholder. \n      - classes (optional) : Pass an array of classes to be applied to the component for styling.\n      - settings (optional): Pass an array of formatting settings to be enabled. Need to be namespaced (e.g. 'core/bold', 'core/italic', or 'core/link'). Will remove all settings if passed an empty array. Current custom options include: \n      - align (optional): An object to enable/disable the alignment toolbar and pass it settings. It has the following values. \n        -- value : A reference to the attribute in the parent block that controls alignment (only required if enabled is set to true)\n        -- reference : Name of the attribute in the parent block that controls alignment (only required if enabled is set to true)\n    \n      ** Any optional revert to a default if nothing is passed. \n\n  onChange\n    A function to update the attribute on the parent on changes in the child. \n    Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n      \n      onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\nEXAMPLE\n\n  <CustomRichText \n    onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    components={[\n      {\n        value: title,\n        reference: \"title\",\n        classes: ['custom-class'],\n        tagName: \"h2\",\n        settings: ['core/bold', 'core/link'],\n        align: {\n          value: alignment,\n          reference: 'alignment'\n        },\n      },\n      {\n        value: subtitle,\n        reference: \"subtitle\",\n        tagName: \"h3\",\n      }\n    ]}\n  />\n\n*/}\n\nimport customError from '../helper-functions/custom-error';\n\nexport default function CustomRichText(props) {\n  const {\n    RichText,\n    AlignmentToolbar,\n    BlockControls,\n  } = wp.blockEditor;\n  \n  const checkFields = (values, fields) => {\n    customError(values, fields);\n  }\n\n  const checkRequiredComponentFields = (values) => {\n    const requiredFields = [ 'value', 'tagName'];\n    values.type = 'RichText';\n    checkFields(values, requiredFields);\n  }\n\n  const checkRequiredProps = (props) => {\n    const requiredFields = [ 'onChange', 'components'];\n    const values = props;\n    values.type = 'RichText';\n    checkFields(values, requiredFields);\n  }\n\n  const checkAlignment = (align) => {\n    const alignmentRequiredFields = ['value', 'reference'];\n    align.type = 'RichText alignment';\n    checkFields(align, alignmentRequiredFields);\n  }\n\n  checkRequiredProps(props)\n\n  const { components, onChange } = props;\n\n  return (\n    <div>\n      {\n        components.map((component) => {\n          checkRequiredComponentFields(component);\n          if (component.align) {\n            checkAlignment(component.align);\n          }\n          return (\n            <div>\n            {\n              component.align ? \n                <BlockControls>\n                  <AlignmentToolbar\n                    value={ component.align.value }\n                    onChange={ (change) => { \n                      onChange(component.align.reference, change)\n                    } }\n                  />\n                </BlockControls> : null\n            }\n            <RichText\n              className={component.classes && component.classes.length > 0 ? `components-text-control__input ${component.classes.join(' ')}` : 'components-text-control__input'}\n              tagName={component.tagName}\n              style={ component.align ? { textAlign: component.align.value } : {} }\n              placeholder={component.placeholder ? component.placeholder : \"Start writing...\"}\n              keepPlaceholderOnFocus={true}\n              allowedFormats={ component.settings && Array.isArray(component.settings) ? component.settings : [ 'core/bold', 'core/underline', 'core/link' ] }\n              value={component.value}\n              onChange={(changes) => {\n                onChange(component.reference, changes);\n              }}\n            />\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}","{/* \n\nABOUT\nCustom Video Upload is a custom component that extends the built in MediaUpload component for easier customization across the site. \n\nPROPS \n    components\n        An array of objects. Each object is a single Media Upload component with associated button with the following fields:\n        - buttonText : The text to be displayed on the upload Button\n        - value : The videoUrl for the specific video.\n        - reference : The name of the video url attribute on the parent component.\n        - altValue : A reference to the video url attribute on the parent component.\n        - reference : The name of the alt value attribute on the parent component.\n        - idValue : A reference to the video id attribute on the parent.\n        - reference : The name of the video id attribute on the parent component.\n        - videoClasses (optional) : An array of classes to be passed to the div containing the video. \n        - buttonClasses (optional) : An array of classes to be passed to the upload video button.\n\n    onChange\n        A function to update the attribute on the parent on changes in the child. \n        Feel free to use the example below, as long as updateAttributeValue is defined on the parent.  \n    \n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n\nEXAMPLE\n\n    <CustomVideoUpload\n        components={[\n            {\n                value: videoUrl,\n                reference: 'videoUrl',\n                altValue: videoAlt,\n                altReference: 'videoAlt',\n                idValue: videoId,\n                idReference: 'videoId',\n                buttonText: 'Add an Icon',\n            },\n        ]}\n        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n    />\n\n*/}\n\nimport customErrors from '../helper-functions/custom-error';\n\nexport default function CustomVideoUpload(props) {\n    const {\n        MediaUpload,\n        MediaUploadCheck\n    } = wp.blockEditor;\n    const {\n        Button\n    } = wp.components;\n    const {\n        Fragment\n    } = wp.element;\n    const { i18n } = wp;\n    const checkRequiredValues = (props) => {\n        const requiredFields = ['components', 'onChange'];\n        const values =  props;\n        values.type = 'Custom Video'\n        customErrors(values, requiredFields);\n    }\n    const checkRequiredVideoAttributes = (props) => {\n        const requiredFields = ['reference', 'value', 'altValue', 'altReference', 'idReference', 'idValue', 'buttonText']\n        const values = props;\n        values.type = 'Custom Video';\n        customErrors(values, requiredFields);\n    }\n    checkRequiredValues(props);\n    const { components, onChange } = props;\n\n    const clearVideo = () => {\n    \n}\n\n    const getVideoButton = (openEvent, component) => {\n        if( component.value ) {\n            return (\n                <div>\n                    <div className={component.videoClasses && Array.isArray(component.videoClasses) ? component.videoClasses.join(' ') : 'video' } >\n                        <video\n                            onClick={ openEvent }\n                            alt={component.altValue ? component.altValue : ''}\n                        >\n                            <source src={ component.value } />\n                        </video>\n                            \n                            \n                \n                    </div>\n                    <div className=\"button-container\">\n                        <Button \n                            onClick={ function() { onChange(component.altReference, ''); onChange(component.reference, ''); onChange(component.idReference, 0);} }\n                            className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                        >\n                            { i18n.__('Remove Video') }\n                        </Button>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"button-container\">\n                    <Button \n                        onClick={ openEvent }\n                        className={component.buttonClasses && Array.isArray(component.buttonClasses) ? component.buttonClasses.join(' ') : 'button button-large' }\n                    >\n                        { i18n.__(component.buttonText) }\n                    </Button>\n                </div>\n            );\n        }\n    };\n\n    return (\n        <Fragment>\n            {\n                components.map((component) => {\n                    checkRequiredVideoAttributes(component);\n                    return (\n                        <MediaUploadCheck>\n                            <MediaUpload\n                                onSelect={ media => { onChange(component.altReference, media.alt); onChange(component.reference, media.url); onChange(component.idReference, Number(media.id)); } }\n                                type=\"video\"\n                                value={ component.value }\n                                render={ ({ open }) => getVideoButton(open, component) }\n                            />\n                        </MediaUploadCheck>\n                    )\n                })\n            }\n        </Fragment>\n    )\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function customSectionBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n    const blockSlug = \"custom-section-block\"; // slug for the block\n\tconst blockTitle = \"Create custom section block\";\n\tconst blockDescription = \"Component to create custom section block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"admin-users\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-section__block\">\n                    <p className=\"block-title\">Custom Section Block</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title\"\n                            },\n                        ]}\n                    />\n                    { save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/custom-subsection-block`, `${namespace}/paragraph`]}\n                        />\n                    )}\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title } = attributes;\n            return <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from \"../helper-functions/constants\";\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function customSubsectionBlock() {\n    const { registerBlockType, createBlock } = wp.blocks;\n    const { i18n } = wp;\n\n    const blockSlug = \"custom-subsection-block\"; // slug for the block\n\tconst blockTitle = \"Create custom subsection block\";\n\tconst blockDescription = \"Component to create custom subsection block\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"admin-users\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n    registerBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n        parent: [`${namespace}/custom-section-block`],\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { attributes, setAttributes } = props;\n\t\t\tconst { title } = attributes;\n\n            function updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div class=\"custom-subsection__block\">\n                    <p className=\"block-title\">Custom Subsection Block</p>\n                    <CustomRichText \n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                        components={[\n                            {\n                                value: title,\n                                reference: \"title\", \n                                tagName: \"p\",\n                                placeholder: \"Please provide a title\"\n                            },\n                        ]}\n                    />\n                </div>,\n\t\t\t];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title } = attributes;\n\t\t},\n\t});\n} ","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\nimport CustomImageUpload from '../reusable/custom-image-upload.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function trmcImageSlideBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"image-slide\";\n\tconst blockTitle = \"Image Slide\";\n\tconst blockDescription = \"Creates an image slide with a caption.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"feedback\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'caption',\n        'image_alt',\n        'image_url'\n    ];\n    const attributes = defaultAttrs(stringAttrs);\n    attributes['image_id'] = {\n        type: 'Number',\n        default: 0,\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n        parent: [`${namespace}/carousel`],\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { caption, image_id, image_alt, image_url } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-child` }>\n                    <p className=\"block-title\">Image Slide</p>\n                    <p style={{ fontSize: '14px', fontStyle: 'italic'}}>Images should be at least 1590px x 550px. Larger images will be cropped with a central focal point.</p>\n                    <CustomImageUpload\n                        components={[\n                            {\n                                value: image_url,\n                                reference: 'image_url',\n                                altValue: image_alt,\n                                altReference: 'image_alt',\n                                idValue: image_id,\n                                idReference: 'image_id',\n                                buttonText: 'Add an Image',\n                            },\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'caption',\n                                value: caption,\n                                tagName: 'p',\n                                classes: ['capstion'],\n                                placeholder: 'Provide a caption for this slide',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { caption, image_alt, image_id, image_url } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}\n","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nimport defaultAttrs from '../helper-functions/default-attrs';\n\nexport default function trmcSliderBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"carousel\";\n\tconst blockTitle = \"Media - Slider\";\n\tconst blockDescription = \"Creates a carousel.\";\n\tconst blockCategory = \"carousels\";\n    const blockIcon = \"slides\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttrs = [\n        'alignment',\n        'title'\n    ];\n    const attributes = defaultAttrs(stringAttrs);\n    attributes['alignment']['default'] = 'center';\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { alignment, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className={`custom-container` }>\n                    <p className=\"block-title\">Media - Slider</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading_two'],\n                                placeholder: 'Provide a Carousel title (optional)',\n                                align: {\n                                    value: alignment,\n                                    reference: 'alignment',\n                                }\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    {save ? (\n                        <InnerBlocks.Content />\n                    ) : (\n                        <InnerBlocks\n                            allowedBlocks={[`${namespace}/image-slide`, 'core/video']}\n                        />\n                    )}\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function trmcStatsColumnBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"stat-column\";\n\tconst blockTitle = \"Statistic\";\n\tconst blockDescription = \"Creates a single statistic.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"layout\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        statistic: {\n            type: 'String',\n            default: '',\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n        parent: [`${namespace}/stats-container`],\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { description, statistic } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className=\"custom-child\">\n                    <p className=\"block-title\">Statistic</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'statistic',\n                                value: statistic,\n                                tagName: 'h3',\n                                classes: ['heading_two'],\n                                placeholder: 'Add statistic',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { description, statistic} = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","import { namespace } from '../helper-functions/constants';\n\nimport CustomRichText from '../reusable/custom-richtext-component.jsx';\n\nexport default function trmcStatsContainerBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n    const { i18n } = wp;\n\n\tconst blockSlug = \"stats-container\";\n\tconst blockTitle = \"Stat Call Out\";\n\tconst blockDescription = \"Creates a container for single statistics.\";\n\tconst blockCategory = \"containers\";\n    const blockIcon = \"chart-bar\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const attributes = {\n        title: {\n            type: 'String',\n            default: '',\n        },\n        description: {\n            type: 'String',\n            default: '',\n        },\n    }\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n        attributes,\n\t\tedit: (props, editor = false, save = false ) => {\n        const { setAttributes, attributes } = props;\n        const { description, title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n\t\t\t}\n\n\t\t\treturn [\n                <div className=\"custom-container\">\n                    <p className=\"block-title\">Stat Call Out</p>\n                    <CustomRichText \n                        components={[\n                            {\n                                reference: 'title',\n                                value: title,\n                                tagName: 'h2',\n                                classes: ['heading_one'],\n                                placeholder: 'Add title (optional)',\n                            },\n                            {\n                                reference: 'description',\n                                value: description,\n                                tagName: 'p',\n                                classes: ['paragraph'],\n                                placeholder: 'Add description (optional)',\n                            }\n                        ]}\n                        onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                    />\n                    <div className={`col--3`}>\n                        {save ? (\n                            <InnerBlocks.Content />\n                        ) : (\n                            <InnerBlocks\n                                allowedBlocks={[`${namespace}/stat-column`]}\n                            />\n                        )}\n                    </div>\n                </div>, \n            ];\n\t\t},\n\t\tsave: () => {\n            const { description, title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// Helpers\nimport { namespace } from './helper-functions/constants';\nimport defaultAttrs from './helper-functions/default-attrs';\n\nimport CustomRichText from \"./reusable/custom-richtext-component.jsx\";\n\nexport default function textColumnBlock() {\n\tconst { registerBlockType } = wp.blocks;\n\tconst {\n\t\tInnerBlocks,\n    } = wp.blockEditor;\n\tconst { i18n } = wp;\n\n\tconst blockSlug = \"text-2up\";\n\tconst blockTitle = \"Text 2-up\";\n\tconst blockDescription = \"Two columns with headline on left and copy on the right.\";\n\tconst blockCategory = \"common\";\n    const blockIcon = \"table-col-after\"; // Dashicons: https://developer.wordpress.org/resource/dashicons/\n\n    const stringAttributes = [ 'title' ];\n    const attributes = defaultAttrs(stringAttributes);\n\n\tregisterBlockType(`${namespace}/${blockSlug}`, {\n\t\ttitle: i18n.__(blockTitle),\n\t\tdescription: i18n.__(blockDescription),\n\t\tcategory: blockCategory,\n        icon: blockIcon,\n\t\tattributes,\n\t\tedit: (props, editor = false, save = false) => {\n\t\t\tconst { setAttributes, attributes } = props;\n\t\t\tconst { title } = attributes;\n\n\t\t\tfunction updateAttributeValue(attribute, value) {\n\t\t\t\tsetAttributes({ [attribute]: value });\n            }\n\n\t\t\treturn [\n                <div>\n                    <div className={`row`}>\n                        <div className=\"col-md-6\">\n                            <CustomRichText \n                                components={[\n                                    {\n                                        value: title,\n                                        reference: 'title',\n                                        tagName: 'h2',\n                                        placeholder: 'Start writing title...',\n                                        classes: ['heading-one'],\n                                    }\n                                ]}\n                                onChange={ ( attribute, change ) => { updateAttributeValue(attribute, change) } }\n                            />\n                        </div>\n                        <div className=\"col-md-6\">\n                            {save ? (\n                                <InnerBlocks.Content />\n                            ) : (\n                                <InnerBlocks\n                                    template={[['core/paragraph']]}\n                                    allowedBlocks={['core/paragraph', 'core/button']}\n                            />\n                            )}\n                        </div> \n                    </div>\t\t\n                </div>,\n            ];\n\t\t},\n\t\tsave: ({ attributes }) => {\n\t\t\tconst { title } = attributes;\n\t\t\treturn <InnerBlocks.Content />;\n\t\t},\n\t});\n}","// import customButtonIcons from './blocks/core-extends/button-icons';\nimport customVideoPoster from './blocks/core-extends/video-embed-poster.jsx';\n\n// Meta\nimport pageMetaBlock from \"./blocks/meta/page-meta.jsx\"\nimport locationMetaBlock from \"./blocks/meta/location-meta.jsx\"\nimport newsReleaseMetaBlock from \"./blocks/meta/news-releases-meta.jsx\";\nimport researchBlogMetaBlock from \"./blocks/meta/research-blogs-meta.jsx\";\nimport newsMetaBlock from \"./blocks/meta/news-meta.jsx\";\nimport leadershipMetaBlock from \"./blocks/meta/leadership-meta.jsx\";\n\nimport textColumnBlock from \"../js/blocks/text-column.jsx\";\nimport imageTextBlock from \"./blocks/image-text.jsx\";\n\n// Page Strips\nimport imageBlock from \"./blocks/image-block.jsx\";\n\n// Accordion Blocks\nimport accordionContainerBlock from \"./blocks/accordion/accordion.jsx\";\nimport accordionRowBlock from \"./blocks/accordion/accordion-row.jsx\";\n\n// Body Copy\nimport bodyCopyBlock from \"./blocks/body-copy.jsx\";\n\n// Callout Columns\nimport calloutContainerBlock from \"./blocks/callouts/callout-container.jsx\";\nimport calloutColumnBlock from \"./blocks/callouts/callout-column.jsx\";\n\n// Content Columns\nimport contentCardContainerBlock from \"./blocks/content-cards/content-card-container.jsx\";\nimport contentCardBlock from \"./blocks/content-cards/content-card.jsx\";\n\n// Image List Blocks\nimport imageListContainerBlock from \"./blocks/image-list/image-list-container.jsx\";\nimport imageListBlock from \"./blocks/image-list/image-list-block.jsx\";\n\n// Logo Blocks\nimport logosContainer from \"./blocks/logos/logo-container.jsx\";\nimport logoBlock from \"./blocks/logos/logo.jsx\";\n\n// Page Strips\nimport pageStripBlock from \"./blocks/page-strips/page-strip.jsx\";\nimport pageStripGraphic from \"./blocks/page-strips/page-strip-graphic.jsx\";\n\n// Slider Blocks\nimport sliderBlock from \"./blocks/slider/slider-container.jsx\";\nimport imageSlideBlock from \"./blocks/slider/image-slide.jsx\";\n\n// Stat Blocks\nimport stateContainerBlock from \"./blocks/stats/stats-container.jsx\";\nimport statColumnBlock from \"./blocks/stats/stats-column.jsx\";\n\n// Greenhouse Blocks\nimport jobBlock from \"./blocks/greenhouse/jobs-block.jsx\";\n\n// Sidebar Table Of Contents Blocks\nimport customSectionBlock from './blocks/sidebar-table-of-contents/custom-section-blok.jsx';\nimport customSubsectionBlock from './blocks/sidebar-table-of-contents/custom-subsection-blok.jsx';\n\n// Core Extends Blocks\ncustomVideoPoster();\n\n// Init meta blocks\npageMetaBlock();\nlocationMetaBlock();\nnewsReleaseMetaBlock();\nresearchBlogMetaBlock();\nnewsMetaBlock();\nleadershipMetaBlock();\n\n// Init blocks here\ntextColumnBlock(); \nimageTextBlock();\n\n// Page Strips\npageStripBlock();\nimageBlock();\npageStripGraphic();\n\n// Accordion Blocks\naccordionContainerBlock();\naccordionRowBlock();\n\n// Body Copy\nbodyCopyBlock();\n\n// Callout Columns\ncalloutContainerBlock();\ncalloutColumnBlock();\n\n// Content Cards\ncontentCardContainerBlock();\ncontentCardBlock();\n\n// Image List Blocks\nimageListContainerBlock();\nimageListBlock();\n\n// Logo Blocks\nlogosContainer();\nlogoBlock();\n\n// Slide Blocks\nsliderBlock();\nimageSlideBlock();\n\n// Stat Blocks\nstateContainerBlock();\nstatColumnBlock();\n\n// Greenhouse Blocks\njobBlock();\n\n// Sidebar Table Of Contents Blocks\ncustomSectionBlock();\ncustomSubsectionBlock();"],"sourceRoot":""}